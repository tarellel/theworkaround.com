<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://bridgetownrb.com/" version="1.1.0">Bridgetown</generator><link href="https://theworkaround.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://theworkaround.com/" rel="alternate" type="text/html" /><updated>2023-06-28T04:43:38+00:00</updated><id>https://theworkaround.com/feed.xml</id><title type="html">TheWorkAround</title><subtitle>The infinite ramblings and ideas of Brandon Hicks</subtitle><author><name>Brandon Hicks</name></author><entry><title type="html">Devise-OTP without jQuery</title><link href="https://theworkaround.com/2023/03/13/devise-otp-without-jquery/" rel="alternate" type="text/html" title="Devise-OTP without jQuery" /><published>2023-03-13T00:00:00+00:00</published><updated>2023-03-13T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2023-03-13-devise-otp-without-jquery.md</id><content type="html" xml:base="https://theworkaround.com/2023/03/13/devise-otp-without-jquery/">&lt;p&gt;Ruby/Rails boasts a unique diversity of available libraries and gems, including several options for authentication such as &lt;a href=&quot;https://github.com/heartcombo/devise&quot;&gt;Devise&lt;/a&gt;, &lt;a href=&quot;https://github.com/omniauth/omniauth&quot;&gt;omniauth&lt;/a&gt;, &lt;a href=&quot;https://github.com/thoughtbot/clearance&quot;&gt;clearance&lt;/a&gt;, &lt;a href=&quot;https://github.com/sorcery/sorcery&quot;&gt;sorcery&lt;/a&gt;, &lt;a href=&quot;https://github.com/jeremyevans/rodauth&quot;&gt;rodauth&lt;/a&gt;, among others. While there are many options to choose from, I personally prefers Devise for its modularity and ease of use.&lt;/p&gt;

&lt;p&gt;However, any modern application needs more than just an authentication system; you also want to ensure you build on permissions permissions &lt;em&gt;(for authorization)&lt;/em&gt;, 2FA, and a solid hash library for additional secure measures.&lt;/p&gt;

&lt;p&gt;There are several &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot;&gt;2fa&lt;/a&gt; libraries that you can integrate with Devise, such as &lt;a href=&quot;https://github.com/tinfoil/devise-two-factor&quot;&gt;devise-two-factor&lt;/a&gt;, &lt;a href=&quot;https://github.com/wmlele/devise-otp&quot;&gt;devise-otp&lt;/a&gt;, &lt;a href=&quot;https://github.com/williamatodd/devise-2fahttps://github.com/williamatodd/devise-2fa&quot;&gt;devise-2fa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Houdini/two_factor_authentication&quot;&gt;two_factor_authentication&lt;/a&gt;, among others. I honestly prefer &lt;a href=&quot;https://github.com/wmlele/devise-otp&quot;&gt;Devise-OTP&lt;/a&gt; for its ease of use and adherence to &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6238&quot;&gt;RFC 6238&lt;/a&gt; implementation using the  &lt;a href=&quot;https://github.com/mdp/rotp&quot;&gt;ROTP&lt;/a&gt; gem.&lt;/p&gt;

&lt;p&gt;However I did encounter an issue with Devise-OTP in that it still assumes applications using it are using Sprockets and jQuery, and the &lt;a href=&quot;https://github.com/wmlele/devise-otp/blob/master/app/assets/javascripts/qrcode.js&quot;&gt;qrcode JS&lt;/a&gt; file it includes requires jQuery. While I still use jQuery regularly at work, I have moved to using StimulusJS for personal projects.&lt;/p&gt;

&lt;p&gt;After attempting to use several npm packages &lt;em&gt;(like &lt;a href=&quot;https://github.com/soldair/node-qrcode&quot;&gt;node-qrcode&lt;/a&gt;)&lt;/em&gt; for generating the users 2fa QRcodes, I also found that 1Password had issues when scanning for a valid 2FA QR code; which could be a significant concern for many users. It is noted that the gem has a handy &lt;a href=&quot;https://github.com/wmlele/devise-otp/blob/master/lib/devise_otp_authenticatable/controllers/helpers.rb#L148&quot;&gt;helper&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;otp_authenticator_token_image_google&lt;/code&gt; for generating QR codes using the Google Chart API, but generating QR codes with a third party like Google may not be the most security-conscious decision.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/devise_otp_without_query/qrcode.png&quot; alt=&quot;qrcode&quot; class=&quot;img-fluid w-3/12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some playing around I was able to find an alternative method to get the qrcodes genreted in the application and without requiring jQuery to be included.&lt;/p&gt;

&lt;p&gt;First to modify devise-opts views I ran the generator so they would be in the app, rather than in the gem.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails g devise_otp:views&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next I added the follow gems to my Gemfile and bundled&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;rotp&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;rqrcode&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my users helper I added the following method to generate the users 2fa QRcode&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;otp_rqr_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otp_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;qr_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RQRCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;QRCode&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otp_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as_png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;resize_exactly_to: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_data_url&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qr_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now within the view files that the gem generated you should have &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/devise/otp_tokens/_token_secret.html.slim&lt;/code&gt;. This &lt;a href=&quot;https://github.com/wmlele/devise-otp/blob/master/app/views/devise/otp_tokens/_token_secret.html.erb#L4&quot;&gt;file&lt;/a&gt; is where the qrcode is generated for the user enabling 2fa for their account. I replaced the &lt;code class=&quot;highlighter-rouge&quot;&gt;otp_authenticator_token_image&lt;/code&gt; (jQuery based) method with &lt;code class=&quot;highlighter-rouge&quot;&gt;otp_rqr_image&lt;/code&gt; that we created earlier. You should now have a valid 2fa QRcode which is also scanable by 1Password and most of password managers or 2fa authenticators.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/devise_otp_without_query/2fa_user_qrcode.png&quot; alt=&quot;qrcode&quot; class=&quot;img-fluid w-4/5&quot; /&gt;&lt;/p&gt;</content><author><name>Brandon</name></author><category term="devise" /><category term="opt" /><category term="rails" /><category term="2fa" /></entry><entry><title type="html">Setting up a Pi-Hole</title><link href="https://theworkaround.com/2019/08/27/setting-up-pi-hole/" rel="alternate" type="text/html" title="Setting up a Pi-Hole" /><published>2019-08-27T00:00:00+00:00</published><updated>2019-08-27T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2019-08-27-setting-up-pi-hole.md</id><content type="html" xml:base="https://theworkaround.com/2019/08/27/setting-up-pi-hole/">&lt;p&gt;Before we get started, if you haven’t heard of the &lt;a href=&quot;https://pi-hole.net/&quot;&gt;PiHole&lt;/a&gt; module.
It’s an Open Source networking product that’s &lt;a href=&quot;https://www.reddit.com/r/pihole/&quot;&gt;exploding&lt;/a&gt; in the consumer networking world.
Let me begin by saying at my families house we have multiple TV’s (a smart TV and a TV with a Roku), the kids each have tablets, and my wife and I have our phones and laptops, as well as a few personal servers (local NAS and development servers). And for the majority of the time, most of these devices are sending and receiving traffic at any given time.&lt;/p&gt;

&lt;p&gt;For several months in a row our households bandwidth peaked over our xfinity (&lt;em&gt;Comcast&lt;/em&gt;) data cap.
I mean $10/$20 extra every month doesn’t sound like much, but it adds up (especially when you have kids).
So I started to monitoring our networks traffic a little more thoroughly, and it turns out a pretty sizeable amount of our throughput was from advertisements. I’m not going to deny watching Netflix, Hulu, Disney+, and YouTube doesn’t consume a ton of bandwidth; but our network was congested with a ton of traffic, that honestly we had no idea was even being used.&lt;/p&gt;

&lt;p&gt;Let me say since I setup our PiHole our network speed seems to have dramatically increased and as you can see from the picture below our network traffic have halved. I’m only theorizing here, but the increase in network speed seems to be from from a combination of having a local DNS within our home network, as well as denying network traffic to a &lt;em&gt;&lt;strong&gt;TON&lt;/strong&gt;&lt;/em&gt; of external resources.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/network_traffic.png&quot; alt=&quot;&quot; class=&quot;img-fluid w-3/12 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I won’t be walking you through how to setup the RasberryPi with Rasbian, but if you haven’t set it up yet I would suggest starting with their &lt;a href=&quot;https://www.raspberrypi.org/documentation/raspbian/&quot;&gt;documentation&lt;/a&gt;. (I setup my Pi using &lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian/&quot;&gt;Rasbian Lite&lt;/a&gt; to reduce the number of wasted resources, since it will be mainly used as a headless network device.)&lt;/p&gt;

&lt;p&gt;My PiHole setup consists of a &lt;a href=&quot;https://www.amazon.com/gp/product/B07TZNW8X2/&quot;&gt;Raspberry Pi 4&lt;/a&gt; with 4GB of RAM and because of the &lt;a href=&quot;https://www.jeffgeerling.com/blog/2019/raspberry-pi-4-needs-fan-heres-why-and-how-you-can-add-one&quot;&gt;heat issue&lt;/a&gt; that everyone’s complaining about; I also purchased a  &lt;a href=&quot;https://www.amazon.com/gp/product/B07TXSQ47L&quot;&gt;case with a cooling fan&lt;/a&gt;. I know, 4GB is way overboard for a for such a &lt;a href=&quot;https://pi-hole.net/2017/05/24/how-much-traffic-can-pi-hole-handle/&quot;&gt;lightweight process&lt;/a&gt; and used as a local DNS server, but I’m also using it for a number of other services as well.&lt;/p&gt;

&lt;h3 id=&quot;begin-setup&quot;&gt;Begin setup&lt;/h3&gt;

&lt;p&gt;This first step isn’t required, but I ran the following command (&lt;code class=&quot;highlighter-rouge&quot;&gt;lsb_release -a &amp;amp;&amp;amp; uname -a&lt;/code&gt;) so you could see what Rasbian release this setup was build on.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No LSB modules are available.
Distributor ID: Raspbian
Description:  Raspbian GNU/Linux 10 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;buster&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Release:  10
Codename: buster
Linux Falion 4.19.58-v7l+ &lt;span class=&quot;c&quot;&gt;#1245 SMP Fri Jul 12 17:31:45 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;adjust-rasbian-configuaton&quot;&gt;Adjust Rasbian Configuaton&lt;/h3&gt;

&lt;p&gt;Next you’ll need to run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo raspi-config&lt;/code&gt; and update the configurations listed below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup new password&lt;/li&gt;
  &lt;li&gt;Set Hostname&lt;/li&gt;
  &lt;li&gt;Set locales (en_us.utf-8, timezone, keyboard layout, country)&lt;/li&gt;
  &lt;li&gt;Update raspi-cofig tool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After these changes, lets restart the Pi so the new configuration changes will be applied &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdow now -r&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since this will be an important component in your network, lets start out on the right foot and remember that we need to be thinking about security with every step along the way. Once your Pi has finished restarting, you’ll need to change the root password.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su &lt;span class=&quot;c&quot;&gt;# This is used to switch to the root user&lt;/span&gt;
passwd  &lt;span class=&quot;c&quot;&gt;# Used to change the current users password&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, lets update all currently installed packages and ensure security when installing optional packages.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Update all software on the Pi&lt;/span&gt;
apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apt-transport-https ca-certificates &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hardening-the-pi&quot;&gt;Hardening the Pi&lt;/h3&gt;

&lt;p&gt;I’m not going to cover every single step of hardening you’re RaspberryPi, but if you need an even deeper understanding of Linux security there are an endless supply of guides on how to harden a Debian based distro.&lt;/p&gt;

&lt;p&gt;Lets start by create an additional user, and removing the default &lt;code class=&quot;highlighter-rouge&quot;&gt;pi&lt;/code&gt; user. This is more of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Security_through_obscurity&quot;&gt;security by obscurity&lt;/a&gt;, because everyone will knows that by default your devices will have a user named &lt;code class=&quot;highlighter-rouge&quot;&gt;pi&lt;/code&gt; which gets them one step closer to having access to your device.&lt;/p&gt;

&lt;p&gt;First we need to create the new user &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo adduser user_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now lets add the new user to the list of sudoers&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/sudoers.d/010_pi-nopasswd
&lt;span class=&quot;c&quot;&gt;# This allows the new user to run sudo, but requires a valid password to entered first&lt;/span&gt;
user_name &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; PASSWD: ALL

&lt;span class=&quot;c&quot;&gt;# You can also run the following&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /usr/sbin/useradd &lt;span class=&quot;nt&quot;&gt;--groups&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; user_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll now need to be sure to completely kill the current terminal session as the &lt;code class=&quot;highlighter-rouge&quot;&gt;pi&lt;/code&gt; user, I’d suggest typing &lt;code class=&quot;highlighter-rouge&quot;&gt;logout&lt;/code&gt; to make sure the session is properly killed.&lt;/p&gt;

&lt;p&gt;The next step is to login as the user we just created, remove the default &lt;code class=&quot;highlighter-rouge&quot;&gt;pi&lt;/code&gt; user that, and then remove this user from the list of sudoers.
(This may seem like a bunch of unnecessary steps, but we want to ensure at least a minimum level of security.)&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# now ssh into the pi using the new user&lt;/span&gt;
ssh user_name@192.168.1.5
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su

&lt;span class=&quot;c&quot;&gt;# Remove the pi user&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;deluser &lt;span class=&quot;nt&quot;&gt;-remove-home&lt;/span&gt; pi

&lt;span class=&quot;c&quot;&gt;# Remove the user from the sudoer list as well&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/sudoers.d/010_pi-nopasswd
-&amp;gt; pi &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lets-start-with-ssh&quot;&gt;Let’s start with SSH&lt;/h4&gt;
&lt;p&gt;Now since I’m running this as a headless device on my network I’ll only be accessing this device through a shell terminal.
So the next step is to begin by locking down OpenSSH.
I know this complicates things to another level, but in my setup I generally prefer to to have a different SSH key a number of services.
I use one key for my DigitalOcean servers, one key for Github, another key for my works Gitlab account, etc etc.
The biggest issue with this is managing a growing number of keys, but if you keep up with configuring your &lt;a href=&quot;https://linuxize.com/post/using-the-ssh-config-file/&quot;&gt;SSH config&lt;/a&gt; file &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/config&lt;/code&gt; as you generate the keys your maintenance should be pretty minimal. My rational behind this is; some people use a single key for every service which is logical, I mean it’s &lt;a href=&quot;https://security.stackexchange.com/questions/112718/difficulty-of-breaking-private-key-password&quot;&gt;not exactly&lt;/a&gt; easy to crack a 4096 encryption key. But if you somehow happen to leak that one private key, any and all services you have associate with it are now compromised. If you have a different RSA key for each major service you use and one key gets comprised the impact should minimal rather than effecting a large number of services.&lt;/p&gt;

&lt;p&gt;Now it may be a personal preference but rather than just generating a generic RSA key I prefer to use &lt;a href=&quot;https://ed25519.cr.yp.to&quot;&gt;ed25519 keys&lt;/a&gt;, mainly because they’re small, fast, and very secure. (If you need instructions on how to &lt;a href=&quot;https://theworkaround.com/2016/11/11/enhancing-ssh-security.html#newer-key-types&quot;&gt;generate ed25519 keys&lt;/a&gt;, I have a snip on one of my previous posts.)&lt;/p&gt;

&lt;p&gt;Now we need to ensure we have the latest version of OpenSSH installed, to do this run the following command: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt install openssh-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The configuration I use follows pretty closely to a combination of the &lt;a href=&quot;https://infosec.mozilla.org/guidelines/openssh&quot;&gt;Mozilla SSH Guidelines (Modern)&lt;/a&gt; and &lt;a href=&quot;http://tldp.org/LDP/solrhe/Securing-Optimizing-Linux-RH-Edition-v1.3/chap15sec122.html&quot;&gt;&lt;abbr title=&quot;The Linux Documentation Project&quot;&gt;TLDP&lt;/abbr&gt;&lt;/a&gt; recommendations.&lt;/p&gt;

&lt;p&gt;Lets open our ssh_config file and replace the configuration with the snippet posted below - &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Adapted from the &quot;Modern&quot; configuration detailed on the Mozilla Security
# Guidelines wiki (https://wiki.mozilla.org/Security/Guidelines/OpenSSH).
# https://github.com/mozilla/socorro-infra/blob/master/puppet/modules/socorro/files/etc_ssh/sshd_config
# http://tldp.org/LDP/solrhe/Securing-Optimizing-Linux-RH-Edition-v1.3/chap15sec122.html
# docs: http://tldp.org/LDP/solrhe/Securing-Optimizing-Linux-RH-Edition-v1.3/chap15sec122.html
# Package generated configuration file
# See the sshd_config(5) manpage for details
&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Port&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;22&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Protocol&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;HostKey&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/etc/ssh/ssh_host_ed25519_key&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;HostKey&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/etc/ssh/ssh_host_rsa_key&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;HostKey&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/etc/ssh/ssh_host_ecdsa_key&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;KexAlgorithms&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Ciphers&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;MACs&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Completely disable password based logins, PublicKey login is required
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;PubkeyAuthentication&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#AuthenticationMethods publickey,keyboard-interactive:pam # enables multiset authentication PublicKey-&amp;gt;Password
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;AuthenticationMethods&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;publickey&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;KbdInteractiveAuthentication&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Lifetime and size of ephemeral version 1 server key
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;KeyRegenerationInterval&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;3600&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# to prevent descryption, regenerate connection keys
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ServerKeyBits&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1024&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Limit to users/groups
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;AllowUsers&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;tarellel&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Don&apos;t read the user&apos;s ~/.rhosts and ~/.shosts files
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;IgnoreRhosts&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# prevents login from trusted networks
#RhostsAuthentication no
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;RhostsRSAAuthentication&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Logging
#SyslogFacility AUTH
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;SyslogFacility&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;AUTHPRIV&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;LogLevel&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Subsystem&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;sftp&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;/usr/lib/openssh/sftp-server&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;AUTHPRIV&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Authentication:
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;PermitRootLogin&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;No&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;UsePrivilegeSeparation&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;sandbox&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# prevent user privilege escalation
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;LoginGraceTime&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# default 120/2m
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;StrictModes&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# checks user [~] permissions
&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;X11Forwarding&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# may wish to turn this off for security purposes it was defaulted to yes
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;AllowTcpForwarding&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ClientAliveCountMax 2 # max amount of concurrently connected clients
# http://serverfault.com/questions/275669/ssh-sshd-how-do-i-set-max-login-attempts
# MaxAuthTries 1 # 1 login attempt per connection, before being dropped
# MaxSessions Specifies the maximum number of open sessions permitted per network connection
# MaxSessions 2
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://patrickmn.com/aside/how-to-keep-alive-ssh-sessions/
# Keep idle TCP connections alive (kill idle connections)
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;TCPKeepAlive&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ClientAliveInterval&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;120&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# how long the connection can be idle (seconds)
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# NOTE: It&apos;s best to disable this when forwarding is also disabled
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Compression&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;PasswordAuthentication&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;PermitEmptyPasswords&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ChallengeResponseAuthentication&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Login/Logout messages
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;PrintMotd&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Banner /etc/issue.net
&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;UsePAM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yes&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Ensure /bin/login is not used so that it cannot bypass PAM settings for sshd.
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;UseLogin&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;UseDNS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next you’ll need to ensure your personal machines public ssh-key is on the Raspberry, so you won’t be locked out of the device. On your local machine run &lt;code class=&quot;highlighter-rouge&quot;&gt;pbcopy &amp;lt; ~/.ssh/.ssh/localnetwork_id.pub&lt;/code&gt; this copys the contents of your SSH’s publickey to your clip. (As I mentioned before, I prefer to generate SSH keys for different services. The SSH-key &lt;code class=&quot;highlighter-rouge&quot;&gt;localnetwork&lt;/code&gt; was generated for all devices in my local home network).&lt;/p&gt;

&lt;p&gt;Now go back to the terminal and ensure the authorized_keys file creates for the current user in the ssh folder &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir ~/.ssh; chmod 0700 ~/.ssh; touch ~/.ssh/authorized_keys; nano ~/.ssh/authorized_keys&lt;/code&gt;. The last part of this command opens up the &lt;code class=&quot;highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt; file in nano, since you previously copied the contents of you public key to your clipboard lets go ahead paste into the this file and hit CTRL-X and save the file. After the contents have been saved you’ll need to chmod it to ensure access to it’s contents is limited &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 0600 ~/.ssh/authorized_keys&lt;/code&gt;. In order for all these changes to be applied you’ll need to restart the ssh process &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemctl restart ssh&lt;/code&gt; (you could always do something like &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl reload ssh&lt;/code&gt; but I prefer to just restart the process).&lt;/p&gt;

&lt;h4 id=&quot;lets-add-a-firewall&quot;&gt;Lets add a firewall&lt;/h4&gt;

&lt;p&gt;I’m sure there will be some moaning that I’m using &lt;a href=&quot;https://launchpad.net/ufw&quot;&gt;UFW&lt;/a&gt; over &lt;a href=&quot;https://linux.die.net/man/8/iptables&quot;&gt;IPtables&lt;/a&gt;, but I find UFW to be easy to get started with and it does exactly what I need.&lt;/p&gt;

&lt;p&gt;Let’s begin by installing the UFW package &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install ufw&lt;/code&gt;. But for me, after intalling UFW I started getting “an IP tables error has occured” when trying to start the UFW server. So again I restarted the Pi and after it had finished reloading all errors were gone. Below are the UFW rules used to begin security incoming network services for your device, before running these commands it helps to &lt;code class=&quot;highlighter-rouge&quot;&gt;su sudo&lt;/code&gt; so you’re creating these rules as a root user.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Some people also prefer to be extra cautious and also begin by blocking all outgoing connects `ufw default deny outgoing` ports.&lt;/span&gt;
ufw default deny incoming &lt;span class=&quot;c&quot;&gt;# Block ALL incoming ports&lt;/span&gt;
ufw allow ssh
ufw allow 53    &lt;span class=&quot;c&quot;&gt;# DNS port&lt;/span&gt;
ufw allow http  &lt;span class=&quot;c&quot;&gt;# Port 80 &amp;amp; 443 are used by PiHole to display a dashboard with PHP/lighttpd&lt;/span&gt;
ufw allow https

&lt;span class=&quot;c&quot;&gt;# Limit the number of login attempts on SSH port&lt;/span&gt;
ufw limit ssh/tcp

&lt;span class=&quot;c&quot;&gt;# Allow FTL pihole engine from LAN (if you are using a different subnet specify this instead)&lt;/span&gt;
ufw allow from 192.168.1.0/24 to any port 4711 proto tcp

ufw &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that a few basic firewall rules have been creates let’s reload the UFW service in order for these rules to start being applies &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ufw reload&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;fail2ban&quot;&gt;Fail2Ban&lt;/h4&gt;

&lt;p&gt;Next we’ll setup &lt;a href=&quot;https://www.fail2ban.org/wiki/index.php/Main_Page&quot;&gt;Fail2Ban&lt;/a&gt;, which is one of my favorite tools to prevent &lt;a href=&quot;https://en.wikipedia.org/wiki/Brute-force_attack&quot;&gt;BruteForcing&lt;/a&gt; and/or &lt;a href=&quot;https://www.owasp.org/index.php/Credential_stuffing&quot;&gt;credential stuffing&lt;/a&gt; login attempts. With the firewall setup; we’ve already taken the measure of preventing network requests to a large number of ports and services. But whenever there’s an open SSH port, I guarentee you it will get hit with requests. (I averted this by only having a VPN port on my router and in order to access my network from outside the network requires you to conenct via VPN into my network, but I’ll cover that farther down.)&lt;/p&gt;

&lt;p&gt;Begin by installing the fail2ban package &lt;code class=&quot;highlighter-rouge&quot;&gt;apt install fail2ban&lt;/code&gt;, than  we’ll adjust the configuration to begin monitoring any and all ssh login attemps&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fail2ban/jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once nano has opened up &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fail2ban/jail.local&lt;/code&gt; hit Ctrl+W and search for &lt;code class=&quot;highlighter-rouge&quot;&gt;[sshd]&lt;/code&gt; and change the configuration for ssh to the following.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[sshd]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;enabled&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;port&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;filter&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sshd&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;logpath&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log/auth.log&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;maxretry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;bantime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets restart and enable fail2ban and verify the process and configuration have properly loaded&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service fail2ban restart&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; service fail2ban start &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Verify fail2ban is running&lt;/span&gt;
service fail2ban status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This step isn’t required, but I like to get the fail2ban client status to ensure the sshd jails (or any others you may add) are enabled &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo fail2ban-client status&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Status &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the jail: sshd
|- Filter
|  |- Currently failed:	0
|  |- Total failed:	0
|  &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;- File list:	/var/log/auth.log
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;- Actions
   |- Currently banned:	0
   |- Total banned:	0
   &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;- Banned IP list:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;unattended-upgrades&quot;&gt;Unattended Upgrades&lt;/h4&gt;

&lt;p&gt;Another one of my favorite tools on a &lt;a href=&quot;https://www.debian.org/&quot;&gt;Debian&lt;/a&gt; based distro is &lt;a href=&quot;https://wiki.debian.org/UnattendedUpgrades&quot;&gt;Unattended Upgrades&lt;/a&gt;. For those of you who have never used it before, it will systematically apply security updates, distro updates, or whatever kind of upgrades you choose to allow it to update. I prefer to keep everything up to do, but it can be danger to enable allowing automatic updates to something such as a webserver. If this is the case, I’d suggest only enabling security updates; because major package upgrades can and will break your software.&lt;/p&gt;

&lt;p&gt;Again let’s begin by installing the required packages &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install unattended-upgrades -y&lt;/code&gt;. Once the package has installed you’ll need to update it’s default configuration &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo nano /etc/apt/apt.conf.d/50unattended-upgrades&lt;/code&gt; to the following:
&lt;em&gt;(The contents of the file specify what updates to look for.)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Unattended&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Origins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Codename based matching:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This will follow the migration of a release through different&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// archives (e.g. from testing to stable and later oldstable).&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Software will be the latest available for the named release,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// but the Debian release itself will not be automatically upgraded.&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;origin=Debian,codename=${distro_codename}-updates&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// origin=Debian,codename=${distro_codename}-proposed-updates&quot;;&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;origin=Debian,codename=${distro_codename},label=Debian&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;origin=Debian,codename=${distro_codename},label=Debian-Security&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Archive or Suite based matching:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Note that this will silently match a different release after&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// migration to the specified archive (e.g. testing becomes the&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// new stable).&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// &quot;o=Debian,a=stable&quot;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// &quot;o=Debian,a=stable-updates&quot;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// &quot;o=Debian,a=proposed-updates&quot;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// &quot;o=Debian Backports,a=${distro_codename}-backports,l=Debian Backports&quot;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to open up &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apt/apt.conf.d/20auto-upgrades&lt;/code&gt; and configure what components of unattended-upgrades you want to enable. In order to keep my packages up to date with the latest changes I changed mine to the following configuration:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;APT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Periodic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Lists&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;APT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Periodic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Upgradeable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Packages&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;APT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Periodic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Unattended&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Upgrade&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;APT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Periodic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Verbose&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;APT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Periodic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AutocleanInterval&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s enable unattended upgraded as a low priority process &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg-reconfigure --priority=low unattended-upgrades&lt;/code&gt; to being monitoring and applying future updates in order to keep our device secure.&lt;/p&gt;

&lt;h2 id=&quot;installing-pihole&quot;&gt;Installing PiHole&lt;/h2&gt;

&lt;p&gt;I know thus far, it’s been like provisioning any other Linux box; but now comes the fun part.
To get started quickly run the following command &lt;code class=&quot;highlighter-rouge&quot;&gt;curl -sSL https://install.pi-hole.net | bash&lt;/code&gt;, it does take a few moments because it attempts to install any additional required libraries. It also required to select a number of configurations based on how you like your PiHole setup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_1.png&quot; alt=&quot;Beginning Install (15%)&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_2.png&quot; alt=&quot;PiHole Network Notice&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After going through a few of the setup screens you’ll be presented with your fix big choice. Which DNS Upstream do you with to use?
You’ll be presented with a number of choices, including but not limited to Google, OpenDNS, Level3, CloudFlare and a number of other choices.
I’m my opinion I suggest picking CloudFlare their &lt;a href=&quot;https://www.cloudflare.com/dns/&quot;&gt;DNS&lt;/a&gt; service is extremely fast and their whole suite of services is about providing security by default.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_3.png&quot; alt=&quot;Selecting Upstream Provider&quot; class=&quot;img-fluid w-50 sm-w-100 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next you’ll be present with of thirdparty blocklists to choose from, this is completely up to you and what you want to block.
And you can always add more later (which we do with this walkthrough).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_4.png&quot; alt=&quot;Choosing your blocklists&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_5.png&quot; alt=&quot;Installing additional packages&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we setup UFW network requests should be filtered. Part of the installation script ensures that the proper ports available in order for the pihole to function properly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_6.png&quot; alt=&quot;Opening up the firewall&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_7.png&quot; alt=&quot;Terminal display of PiHole Installing&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the installation has finished installing you should be presented with a final menu telling you your PiHoles dashboard address and password. (The address should be something like &lt;code class=&quot;highlighter-rouge&quot;&gt;http://192.168.1.5/admin&lt;/code&gt;). When visiting the dashboard you should be presented with something similar to the following image:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_8.png&quot; alt=&quot;PiHole Dashboard&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now for the most part you’re almost, next we’ll need to configure our router to query the PiHole service for any DNS requests.
To do this you’ll need to change your Routers DNS settings to use the internal IP Address for the RaspberryPi.
I also applied CloudFlares DNS IP Addresses &lt;code class=&quot;highlighter-rouge&quot;&gt;1.1.1.1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1.0.0.1&lt;/code&gt;. This is because for any reason the Pi is shutdown or inaccessible your network won’t come a dead halt, it’ll fallback to the secondary DNS server (Cloudflare).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/installing_pihole_9.png&quot; alt=&quot;PiHole Dashboard&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;setting-up-vpn-access&quot;&gt;Setting up VPN Access&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pivpn.io/&quot;&gt;PiVPN&lt;/a&gt; is an insanely easy to install and the Pi alternative to installing OpenVPN on an ARM chip.&lt;/p&gt;

&lt;p&gt;To install it lets run the following command &lt;code class=&quot;highlighter-rouge&quot;&gt;curl -L https://install.pivpn.io | bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Again the commandline menu screen will come up and walk you through the various steps to install PiVPN, some of the steps are pretty quick but once you get to where it needs to generate a certificate for your VPN it will take a while.
Once OpenVPN started generating a certificate for the VPN I stepped away because for a snack, but it took a good 5 or 10 minutes to generate.&lt;/p&gt;

&lt;p&gt;Something to note, I ended up having to set the VPN’s DNS settings as the PI’s static IP Address.
It may have just been the situation, but when I was VPN’ing in and the DNS was set as the IP address of the router &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; it was causing my computer the pull DNS from the actual network I was connected to rather then through the PiHole service.
In order to mitigate this I ended up changing the VPNs DNS settings to use it’s own IP address as the DNS server.&lt;/p&gt;

&lt;p&gt;To do this we’ll need to modify the openvpn config &lt;code class=&quot;highlighter-rouge&quot;&gt;nano /etc/openvpn/server.conf&lt;/code&gt; and change the following
&lt;code class=&quot;highlighter-rouge&quot;&gt;push &quot;dhcp-option DNS 192.168.1.1&quot;&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;push &quot;dhcp-option DNS 192.168.71.1&quot;&lt;/code&gt; or to whatever you Pi’s ip address is.&lt;/p&gt;

&lt;p&gt;If you don’t know your current local IP address you can get this by running &lt;code class=&quot;highlighter-rouge&quot;&gt;ifconfig&lt;/code&gt; and getting the ip address listed under the eth0 network adapter.&lt;/p&gt;

&lt;p&gt;After this step was complete I ended up rebooting the Pi again, so all the new configuration changes and services would be applied.&lt;/p&gt;

&lt;p&gt;We’re still a ways off from being finished with setting up the VPN, once the Pi has finished rebooting we need to add users to the VPN. This can be done by running the command &lt;code class=&quot;highlighter-rouge&quot;&gt;pivpn add&lt;/code&gt;.
You may want to just have a user and make them authenticate with the signed key, I’m a little cautious and decided to have my user &lt;em&gt;(of course me)&lt;/em&gt; require to have a password as well as the signed key to authenticate to the VPN. If you end up needing help or finding additional commands for the VPN you can run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;pivpn help&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The next step I did was pull my generated VPN file to my computer so I could add it to my computer and phone.
If you do plan on using your phone, for security reasons I suggest having a seperate VPN key for your computer and mobile phone.&lt;/p&gt;

&lt;p&gt;To pull the openvpn signature file to you computer using scp, you can run a command similar to the following:
&lt;em&gt;(Towards the end of this post I’ll explain how to use the on ur phone or macbook)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scp -i /Users/pi_user/.ssh/localnetwork_id pi_user@192.168.1.17:/home/tarellel/ovpns/tarellelRemote.ovpn .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next step is to enable access to the VPN ports, otherwise we’ll still never be able to VPN into the network through the PI. I started by enabling the UDP VPN port &lt;code class=&quot;highlighter-rouge&quot;&gt;ufw allow 1194/udp&lt;/code&gt;, but for some reason I had issues. To get around this I ended up having to remove this rule and just enable access to the 1194 port in general &lt;code class=&quot;highlighter-rouge&quot;&gt;ufw allow 1194&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After opening up the VPN ports I decided to reload it’s configuration, it may be a bit redundent but what’s it going to hurt.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /etc/init.d/openvpn reload
&lt;span class=&quot;c&quot;&gt;# Just to verify openvpn reloaded properly&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status openvpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we need to update openvpn’s network devices priority &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo nano /etc/pihole/setupVars.conf&lt;/code&gt; and add the following &lt;code class=&quot;highlighter-rouge&quot;&gt;PIHOLE_INTERFACE=tun0&lt;/code&gt; below eth0. The pretty much tells openVPN to use &lt;code class=&quot;highlighter-rouge&quot;&gt;eth0&lt;/code&gt; as it’s primary device and &lt;code class=&quot;highlighter-rouge&quot;&gt;tun0&lt;/code&gt; as the pihole virtual network device.&lt;/p&gt;

&lt;p&gt;Next we’ll need to list the devices in which we want to allow to make DNS requests through the &lt;a href=&quot;http://www.thekelleys.org.uk/dnsmasq/doc.html&quot;&gt;dnsmasq&lt;/a&gt; network service. To add the devices lets open it up &lt;code class=&quot;highlighter-rouge&quot;&gt;nano /etc/dnsmasq.d/01-pihole.conf&lt;/code&gt; and add the following list of devices.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;eth0&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tun0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since we’ve just make some more changes to the OpenVPN configuration and firewall lets reset these services &lt;em&gt;(yes again, I know)&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service openvpn reload
service openvpn restart
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;ufw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-log2ram&quot;&gt;Install log2ram&lt;/h2&gt;

&lt;p&gt;This next step is pretty important, the reason being SD cards aren’t meant to have files written on and removed from at a constant pace, especially when it comes to generating logs. It’s like havine a piece of paper writing on it and than erasing it, over and over again. Eventually that piece of paper will become useless, the same can be said for SD cards. To mitigate this, we end up using &lt;a href=&quot;https://github.com/azlux/log2ram&quot;&gt;log2ram&lt;/a&gt; which will save our logs in memory and once it consumes X amount of memory it’ll save as an actual log file.&lt;/p&gt;

&lt;p&gt;The following steps are copied directory from the projects documentation.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-Lo&lt;/span&gt; log2ram.tar.gz https://github.com/azlux/log2ram/archive/master.tar.gz
&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xf log2ram.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;log2ram-master
&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x install.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./install.sh
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; log2ram-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now before doing anything else we’ll need to restart the server again &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown now -r&lt;/code&gt;.
After your device has came back up, we’ll need to adjust the log2ram’s configuration by editing the following file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/log2ram.conf&lt;/code&gt;. And chance the following:&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Change
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;40M&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Lets increase the RAM log size to 100M
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;100M&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# You also want to disbale creating report error mails
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Change it to falsse
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;MAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I know you’re getting tired of it, but again we’ll need to restart the Pi in order for the new RAM/log configuration to be properly come into effect. &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown now -r&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;update-raspberry-pis-bootloader&quot;&gt;Update Raspberry Pi’s bootloader&lt;/h2&gt;

&lt;p&gt;If you’re device is pretty fresh out of the box I can almost guarentee you that your Pi will need to have it’s bootloader updated. I’m just going to list the steps take in order to verify and apply a bootloader update&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rpi-eeprom

&lt;span class=&quot;c&quot;&gt;# enable checking for bootloader updates&lt;/span&gt;
systemctl unmask rpi-eeprom-update

&lt;span class=&quot;c&quot;&gt;# For the O/S to check for a bootlaoder update&lt;/span&gt;
rpi-eeprom-update

&lt;span class=&quot;c&quot;&gt;# If the results show an update you&apos;ll need the Pi to prepare the page for update&lt;/span&gt;
rpi-eeprom-update &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# In order for the bootloader update to be applied a restart is required&lt;/span&gt;
shutdown now &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re device requires an update your results should look similar to the following screenshot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/bootloader_update.png&quot; alt=&quot;Bootloader Update&quot; class=&quot;img-fluid sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;update-pihole-blocklists&quot;&gt;Update PiHole Blocklists&lt;/h2&gt;

&lt;p&gt;By default the basic list that your Pihole uses is pretty decent it blocks quite a bit of the heavy ad and trackying systems, but I prefer to block more. This is because as I watch my traffic I noticed several of the devices in my houses are still sending requests to various tracking URLs including my smart TV, my kids tablets, my printer, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/pihole_stats.png&quot; alt=&quot;Pihole Request Stats&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First you’ll want setup your &lt;a href=&quot;https://docs.pi-hole.net/guides/whitelist-blacklist/&quot;&gt;blocklist&lt;/a&gt; of DNS requests to start blocking as many trackers as you possibly can. My list of blocklists is ended up including about 2 million different links and ends up blocking anywhere between 40-70% of my daily traffic &lt;em&gt;(&lt;a href=&quot;https://gist.githubusercontent.com/tarellel/40296f278405e48365cf91b319a9dd3d/raw/af63425d1506dbb03aa47b57aae7ed32bbd7f92a/PiHole_Blocklists.txt&quot;&gt;my list of blocklists&lt;/a&gt;)&lt;/em&gt;.
Once you add these lists to your piholes blocklist and update you Pi gravity rating you’ll almost instant notice pages are loading faster and you traffics congestion has been massive reduced.&lt;/p&gt;

&lt;p&gt;Not lets add some &lt;a href=&quot;https://docs.pi-hole.net/ftldns/regex/tutorial/&quot;&gt;regex&lt;/a&gt; filters to filter out any of those DNS that haven’t been caught by the blocklists. The &lt;a href=&quot;https://gist.githubusercontent.com/tarellel/40296f278405e48365cf91b319a9dd3d/raw/af63425d1506dbb03aa47b57aae7ed32bbd7f92a/PiHole_Regex_filers.txt&quot;&gt;regex filters I use&lt;/a&gt;, I believe I got some piecing together a few reddit posts together. They are specifically setup to catch any DNS requests that have the phrase &lt;code class=&quot;highlighter-rouge&quot;&gt;tracker, traffic, ads, analytics&lt;/code&gt; or various other phrases&lt;/p&gt;

&lt;p&gt;Next you’ll need to add some your whitelists, mine if a bit liberal and I need to go through and trim it down. But I started out by making it pretty broad, because otherwise spccific services and devices would no longer work on my home network because they uptime ping backs were completely disabled.
These included; our xbox, Spotify, updating my kids android devices, updating our LG Smart TV, using our Plex server, Hulu, accessing namecheap, and blocking facebook &lt;em&gt;(which I’d prefer, but my wife can’t list without)&lt;/em&gt; from the network. My whitelist can also be found also be found on &lt;a href=&quot;https://gist.githubusercontent.com/tarellel/40296f278405e48365cf91b319a9dd3d/raw/af63425d1506dbb03aa47b57aae7ed32bbd7f92a/PiHole_Whitelist.txt&quot;&gt;github as a gist&lt;/a&gt;. After updating and all all these URL’s and snips to your piholes list, you’ll also want to update and reload your piholes gravity list again. This is to ensure anything added to the whitelist hopefully won’t still be filtered and any regex you added will have hopefully be properly filtered.&lt;/p&gt;

&lt;h2 id=&quot;applications-to-use&quot;&gt;Applications to use&lt;/h2&gt;

&lt;p&gt;In order to VPN into your network &lt;em&gt;(if you want to use the Pihole when outside your network)&lt;/em&gt;, you’ll need to download the specified VPN client.
If you are using an iPhone you’ll need to use &lt;a href=&quot;https://apps.apple.com/us/app/openvpn-connect/id590379981&quot;&gt;OpenVPN&lt;/a&gt; iOS client, for android you can download the &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.openvpn.openvpn&quot;&gt;OpenVPN&lt;/a&gt; app, and for OSx I used &lt;a href=&quot;https://tunnelblick.net/downloads.html&quot;&gt;Tunnelblick&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to use the VPN client on your iPhone you will need to connect it to your computer, similar to how you would sync data between the two or doing a backup.
&lt;img src=&quot;/images/posts/setting_up_a_pihole/trust_iphone.png&quot; alt=&quot;Bootloader Update&quot; class=&quot;img-fluid w-50 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Than on the list of options available for your phone , you need to click the files tab, this will allow you to access the files on your phone. We’ll now need to find the VPN key we generated and &lt;code class=&quot;highlighter-rouge&quot;&gt;scp&lt;/code&gt;‘ed from the Raspberry Pi earlier. And you’ll need to dump it on the OpenVPN application. It may prompt you if you’d like to trust the file be transfered to your phone. Accept it and it should setup the VPN connection configuration for you on your phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/iphone_application_list.png&quot; alt=&quot;Bootloader Update&quot; class=&quot;img-fluid w-3/12 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This won’t work while you’re in the same network, but if you turn off wifi or connect from outside the network you should be able to connect like the pictures below. (if you added a password to your VPN key you may also need to occasionally input the password  before it will allow you to connect or use the key).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/setting_up_a_pihole/VPN_list.png&quot; alt=&quot;List of VPNs on iPhone&quot; class=&quot;img-fluid w-3/12 sm-w-100&quot; /&gt; &lt;img src=&quot;/images/posts/setting_up_a_pihole/VPN_connected.png&quot; alt=&quot;Connected to VPN through the Pi-Hole&quot; class=&quot;img-fluid w-3/12 sm-w-100&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/&quot;&gt;PiHole Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/documentation/raspbian/&quot;&gt;Rasbian Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Brandon</name></author><category term="homelab" /><category term="linux" /><category term="networking" /><category term="pihole" /><category term="raspberrypi" /><category term="security" /><category term="ssh" /><category term="terminal" /><category term="vpn" /></entry><entry><title type="html">Docker Swarm Persistent Storage</title><link href="https://theworkaround.com/2019/05/15/docker-swarm-persistent-storage/" rel="alternate" type="text/html" title="Docker Swarm Persistent Storage" /><published>2019-05-15T00:00:00+00:00</published><updated>2019-05-15T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2019-05-15-docker-swarm-persistent-storage.md</id><content type="html" xml:base="https://theworkaround.com/2019/05/15/docker-swarm-persistent-storage/">&lt;p&gt;Unless you’ve been living under a rock, you should need no explanation what &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; is.
Using Docker over the last year has drastically improved my deployment ease and with coupled with &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab’s&lt;/a&gt; CI/CD has made deployment extremely ease. Mind you, not all our applications being deployed have the same requirements, some are extremely simple and others are extraordinarily complex.
So when we start a new project we have a base docker build to begin from and based on the applications requirements we add/remove as needed.&lt;/p&gt;

&lt;h3 id=&quot;a-little-about-docker-swarm&quot;&gt;A little about Docker Swarm&lt;/h3&gt;

&lt;p&gt;For the large majority of most of our applications, having a volume associated with the deployed containers and storing information is the database fits the applications needs.&lt;/p&gt;

&lt;p&gt;In front of all our applications we used to use &lt;a href=&quot;https://proxy.dockerflow.com/&quot;&gt;Docker Flow Proxy&lt;/a&gt; to quickly integrate our application into our deployed environment and assign it a subdomain based on it’s service. For a few months we experienced issues with the proxy hanging up, resources not being cleared, and lots of dropped connections. Since than I have rebuilt our docker infrastructure and now we use &lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt; for our proxy routing and it has been absolutely amazing! It’s extremely fast, very robust and extensible, and easy to manipulate to fit your needs. Heck before even deploying it I was using &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker-compose&lt;/a&gt; to  build a local network proxy to ensure it was what we needed. While Traefik was running in compose I was hitting domains such as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://whoami.localhost/&lt;/code&gt; and this was a great way to learn the basic configuration before pushing it into a staging/production swarm environment. &lt;em&gt;(That explaing how we got started with Traefik is a whole other post of it’s own.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now back to our docker swarm, I know the big thing right now is &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;. But every organization has their specific needs, for their different environments, application, types, and deployment mechanisms. In my opinion the current docker environment we’ve got running right now is pretty robust. We’ve got dozens of nodes, a number of deployment environments (cybersec, staging, and production), dozens of applications running at once, and some of then requiring a number of services in order to function properly.&lt;/p&gt;

&lt;p&gt;A few of the things that won me over on the docker swarm in the first place is it’s load balancing capabilities, it’s very fault-tolerant, and the self-healing mechanism that it uses in case a container crashes, a node locks up or drops, or a number of other issues.
&lt;em&gt;(We’ve had a number of servers go down due to networking issues or a rack server crapping out and with the docker swarm running you could never even tel we were having issues as an end user to our applications.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em class=&quot;small&quot;&gt;(Below is an image showing traffic hitting the swarm. If you have an application replicated upon deployment, traffic will be distributed amongst the nodes to prevent bottle necks.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/docker-swarm-persistent-storage/SwarmTraffic.svg&quot; alt=&quot;Docker Swarm Traffic&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;why-would-you-need-persistent-storage&quot;&gt;Why would you need persistent storage?&lt;/h3&gt;

&lt;p&gt;Since the majority of our applications are data orientated, (with most of them hitting several databases in a single request) we hadn’t really had to worry about persistent storage.
This is because once we deployed the applications; their volumes held all of their required assets and any data they needed was fetched from the database.&lt;/p&gt;

&lt;p&gt;The easiest way to explain volumes, is when a container is deployed to a node (if specified) it will put aside a section of storage specifically for that container.
For example say we have an application called DogTracker the was deployed on node A and B.
This application can create and store files in their volumes on those nodes.
But what happens when there’s an issue with the container on node A and the container cycles to node C?
The data created by the container is left in the volume on node A an no longer available, until that applications container cycles back to node A.&lt;/p&gt;

&lt;p&gt;And from this arises the problem we began to face. We were starting to develop applications that were starting to require files to be shared amongst each other.
We also have numerous applications that require files to be saved and distributed without them being dumped into the database as a blob.
And these files were required to be available without cycling volumes and/or dumping them into the containers during build time.
And because of this, we needed to be able to have some form of persistent and distributed file storage across our containers.&lt;/p&gt;

&lt;p&gt;&lt;em class=&quot;small&quot;&gt;(Below is an image showing how a docker swarms volumes are oriented)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/docker-swarm-persistent-storage/DockerSwarm.svg&quot; alt=&quot;Docker Swarm Diagram&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-we-got-around-this&quot;&gt;How we got around this!&lt;/h3&gt;

&lt;p&gt;Now in this day an age there’s got to be ways to get around this.
There’s at least 101 ways to do just about anything and it doesn’t always have to be newest shiniest toy everyone’s using.
I know saying this while using Docker is kind of a hypocritical statement, but shared file systems have been around for decades.
You’ve been able to mount network drives, ftp drives, have organizational based shared folders, the list can go on for days.&lt;/p&gt;

&lt;p&gt;But the big question is, how do we get a container to mount a local shared folder or distribute volumes across all swarm nodes?
Well, there’s a whole list of distributed filesystems and modern storage mechanisms in the &lt;a href=&quot;https://docs.docker.com/engine/extend/legacy_plugins/&quot;&gt;docker documentation&lt;/a&gt;.
Below is a list of the top recommended alternatives I found for &lt;a href=&quot;https://en.wikipedia.org/wiki/Distributed_File_System_(Microsoft)&quot;&gt;distributed file systems&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System&quot;&gt;NFS’s&lt;/a&gt; for the docker stratosphere around container development.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ceph.com/&quot;&gt;Ceph&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rancher/convoy&quot;&gt;Convoy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rexray/rexray&quot;&gt;RexRay&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://portworx.com/use-case/docker-persistent-storage/&quot;&gt;PortWorx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pvdbleek/storageos&quot;&gt;StorageOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xtreemfs.org/&quot;&gt;xtreemfs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know you’re wondering why we didn’t use &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;S3&lt;/a&gt;, &lt;a href=&quot;https://www.digitalocean.com/products/spaces/&quot;&gt;DigitalOcean Spaces&lt;/a&gt;, &lt;a href=&quot;https://cloud.google.com/storage/docs/&quot;&gt;GCS&lt;/a&gt;, or some other cloud storage.
But internally we have a finite amount of resources and we can spin up VM’s and be rolling in a matter of moments.
Especially considering we have build a number of &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; playbooks to quickly provision our servers.
Plus, why throw resources out on the cloud, when it’s not needed.
Especially when we can metaphorically create our own network based file system and have our own cloud based storage system.&lt;/p&gt;

&lt;p&gt;&lt;em class=&quot;small&quot;&gt;(Below is an image showing we want to distribute file system changes)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/docker-swarm-persistent-storage/DockerSwarm_wStorage.svg&quot; alt=&quot;&quot; class=&quot;img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After looking at several methods I settled on &lt;a href=&quot;https://www.gluster.org/&quot;&gt;GlusterFS&lt;/a&gt; a scalable network filesystem.
Don’t get me wrong, a number of the other alternatives are pretty ground breaking and some amazing work as been put into developing them.
But I don’t have thousands of dollars to drop on setting up a network file system, that  may or may not work for our needs.
There were also several others that I did look pretty heavily into, such as &lt;a href=&quot;https://github.com/pvdbleek/storageos&quot;&gt;StorageOS&lt;/a&gt; and &lt;a href=&quot;https://ceph.com/&quot;&gt;Ceph&lt;/a&gt;.
With StorageOS I really liked the idea of a container based file system that stores, synchronizing, and distributes files to all other storage nodes within the swarm.
And it may just be me, but Ceph looked like the prime competitor to Gluster. They both have their &lt;a href=&quot;https://technologyadvice.com/blog/information-technology/ceph-vs-gluster/&quot;&gt;high points&lt;/a&gt; and seem to work very reliable.
But at the time; it wasn’t for me and after using Gluster for a few months, I believe that I made the right choice and it’s served it’s purpose well.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gluster.org/&quot;&gt;&lt;img src=&quot;/images/posts/docker-swarm-persistent-storage/gluster-ant.png&quot; alt=&quot;Gluster Ant&quot; class=&quot;img-fluid w-3/12&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;gluster-notes&quot;&gt;Gluster Notes&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;(&lt;strong&gt;Note:&lt;/strong&gt; The following steps are to be used on a Debian/Ubuntu based install.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Documentation for using Gluster can be found on their &lt;a href=&quot;https://docs.gluster.org/en/latest/&quot;&gt;docs&lt;/a&gt;. Their installation instructions are very brief and explain how to install the gluster packages, but they don’t go into depth in how to setup a Gluster network. I also suggest thoroughly reading through to documentation to understand Gluster volumes, bricks, pools, etc.&lt;/p&gt;

&lt;h3 id=&quot;installing-glusterfs&quot;&gt;Installing GlusterFS&lt;/h3&gt;

&lt;p&gt;To begin you will need to list all of the Docker Swarm nodes you wish to connect in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; files of each server.
On linux (Debian/Ubuntu), you can get the current nodes IP Address run the following command &lt;code class=&quot;highlighter-rouge&quot;&gt;hostname -I | awk &apos;{print $1}&apos;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em class=&quot;fa fa-info-circle text-primary&quot;&gt; &lt;/em&gt; &lt;em class=&quot;small&quot;&gt;(The majority of the commands listed below need to be ran on each and every node simultaneously unless specified. To do this I opened a number of terminal tabs and connected to each server in a different tab.)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# /etc/hosts
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging1&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging1&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging2&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging2&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging3&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging3&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging4&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging4&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging5&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staging5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Update &amp;amp; Upgrade all installed packages&lt;/span&gt;
apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Install gluster dependencies&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-software-properties &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the GlusterFS &lt;a href=&quot;https://itsfoss.com/ppa-guide/&quot;&gt;PPA&lt;/a&gt; package the list of trusted packages to install from a community repository.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository ppa:gluster/glusterfs-3.10&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets install gluster&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; glusterfs-server attr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now before starting the Gluster service but I had to copy some files into systemd &lt;em&gt;(you may or may not have to do this)&lt;/em&gt;. But since Gluster was developed by &lt;a href=&quot;https://www.redhat.com/en/technologies/storage/gluster&quot;&gt;RedHat&lt;/a&gt; primarily for &lt;a href=&quot;https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux&quot;&gt;RedHat&lt;/a&gt; and &lt;a href=&quot;https://www.centos.org/&quot;&gt;CentOS&lt;/a&gt;, I had a few issues starting the system service.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /etc/init.d/glusterfs-server /etc/systemd/system/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s start and enable the glusterfs system service&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;glusterfs-server&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; systemctl start glusterfs-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This step isn’t necessary, but I like to verify that&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Verify the gluster service is enabled&lt;/span&gt;
systemctl is-enabled glusterfs-server
&lt;span class=&quot;c&quot;&gt;# Check the system service status of the gluster-server&lt;/span&gt;
systemctl status glusterfs-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If for some reason you haven’t done this yet, each and every node should have it’s own ssh key generated.&lt;/p&gt;

&lt;p&gt;&lt;em class=&quot;small&quot;&gt;(The only reason I can think of why they wouldn’t have a different key is if a VM was provisioned and than cloned for similar use across a swarm.)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# This is to generate a very basic SSH key, you may want to specify a key type such as ED25519 or bit length if required.&lt;/span&gt;
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dependant on your Docker Swarm environment and which server you’re running as a manager; you’ll probably want one of the node managers to also be a gluster node manager as well. I’m going to say server &lt;code class=&quot;highlighter-rouge&quot;&gt;staging1&lt;/code&gt; is one of our node managers, so on this server we’re going to probe all other gluster nodes to add them to the gluster pool. (Probing them essentially is saying this manager is telling all servers on this list to connect to each-other.)&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gluster peer probe staging1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; gluster peer probe staging2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; gluster peer probe staging3&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; gluster peer probe staging4&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; gluster peer probe staging5&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s not required, but probably good practice to ensure all of the nodes have connected to the pool before setting up the file system.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gluster pool list

&lt;span class=&quot;c&quot;&gt;# =&amp;gt; You should get results similar to the following&lt;/span&gt;
UUID					Hostname 	State
a8136a2b-a2e3-437d-a003-b7516df9520e	staging3 	Connected
2a2f93f6-782c-11e9-8f9e-2a86e4085a59	staging2 	Connected
79cb7ec0-f337-4798-bde9-dbf148f0da3b	staging4 	Connected
3cfc23e6-782c-11e9-8f9e-2a86e4085a59	staging5 	Connected
571bed3f-e4df-4386-bd46-3df6e3e8479f	localhost	Connected

&lt;span class=&quot;c&quot;&gt;# You can also run the following command to another set of results&lt;/span&gt;
gluster peer status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets create the gluster data storage directories &lt;em&gt;(&lt;strong&gt;It’s very important you do this on every node.&lt;/strong&gt; This is because this directory is where all gluster nodes will store the distributed files locally.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /gluster/brick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets create a gluster volume across all nodes (again run this on the master node/node manager).&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gluster volume create staging-gfs replica 5 staging1:/gluster/brick staging2:/gluster/brick staging3:/gluster/brick staging4:/gluster/brick staging5:/gluster/brick force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to initialize the glusterFS to begin synchronizing across all nodes.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gluster volume start staging-gfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This step is also not required, but I prefer to verify the gluster volume replicated across all of the designated nodes.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gluster volume info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No let’s ensure we have gluster mount the &lt;code class=&quot;highlighter-rouge&quot;&gt;/mtn&lt;/code&gt; directory for it’s shared directory especially on a reboot. &lt;strong&gt;&lt;em&gt;(It’s important to run these commands on all gluster nodes.)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /mnt
&lt;span class=&quot;nb&quot;&gt;sudo echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;localhost:/staging-gfs /mnt glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/fstab
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount.glusterfs localhost:/staging-gfs /mnt
&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; root:docker /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em class=&quot;small&quot;&gt;(You may have noticed the setting of file permissions using &lt;code class=&quot;highlighter-rouge&quot;&gt;chown -R root:docker&lt;/code&gt; this is to ensure docker will have read/write access to the files in the specified directory.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If for some reason you’ve already deployed your staging gluster-fs and need to remount the staging-gfs volume you can run the following command. Otherwise you should be able to skip this step.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /mnt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount.glusterfs localhost:/staging-gfs /mnt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; root:docker /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s list all of our mounted partitions and ensure that the &lt;code class=&quot;highlighter-rouge&quot;&gt;staging-gfs&lt;/code&gt; is listed.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# =&amp;gt; staging-gfs should be listed in the partitions/disks listed&lt;/span&gt;
localhost:/staging-gfs              63G   13G   48G  21% /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that all of the work is pretty much done, now comes the fun part lets test to make sure it all works.
Lets &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into the &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt&lt;/code&gt; directory and create a few files to make sure they will sync across all nodes.
&lt;em&gt;(I know this is one of the first things I wanted to try out.)&lt;/em&gt;
You can do one of the following commands to generate a random file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt&lt;/code&gt; directory.
Now depending on your servers and network connections this should sync up across all nodes almost instantly.
The way I tested this I was in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/mtn&lt;/code&gt; directory on several nodes in several terminals. And as soon as I issued the command I was running the &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; command in the other tabs.
And depending on the file size, it may not sync across all nodes instantly, but is at least accessible.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# This creates a 24MB file full of zeros&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dd &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;output.dat &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;24M  &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1

&lt;span class=&quot;c&quot;&gt;# Creates a 2MB file of random characters&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dd &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/urandom &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;output.log &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1M &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-glusterfs-with-docker&quot;&gt;Using GlusterFS with Docker&lt;/h3&gt;

&lt;p&gt;Now that all the fun stuff is done if you have looked at docker &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;volumes&lt;/a&gt; or &lt;a href=&quot;https://docs.docker.com/storage/bind-mounts/&quot;&gt;bind&lt;/a&gt; mounts this would probably be a good time.
Usually docker will store a volumes contents in a folder structure similar to the following: &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/docker/volumes/DogTracker/_data&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But in your &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-stack.yml&lt;/code&gt; you can specify specific mount points for the docker volumes.
If you look at the following &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; snippet you will notice I’m saying to store the containers &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/couchdb/data&lt;/code&gt; directory on the local mount point &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/staging_couch_db&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.7&apos;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;couchdb&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;couchdb:2.3.0&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/mnt/staging_couch_db&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/opt/couchdb/data&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;internal&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cpus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0.30&apos;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;512M&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;reservations&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cpus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0.15&apos;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;256M&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now as we had previously demonstrated any file(s) saved, created, and/or deleted in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/mtn&lt;/code&gt; directory will be synchronized across all of the GlusterFS nodes.&lt;/p&gt;

&lt;p&gt;I’d just like to mention this may not work for everyone, but this is the method that worked best for use.
We’ve been running a number of different Gluster networks for several months now with no issues &lt;em&gt;thus far&lt;/em&gt;.&lt;/p&gt;</content><author><name>Brandon</name></author><category term="containers" /><category term="docker" /><category term="docker-swarm" /><category term="gluster" /><category term="linux" /><category term="storage" /></entry><entry><title type="html">Ruby’s Year of Performance (2018)</title><link href="https://theworkaround.com/2018/06/04/rubys-year-of-performance-2018/" rel="alternate" type="text/html" title="Ruby&apos;s Year of Performance (2018)" /><published>2018-06-04T00:00:00+00:00</published><updated>2018-06-04T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2018-06-04-rubys-year-of-performance-2018.md</id><content type="html" xml:base="https://theworkaround.com/2018/06/04/rubys-year-of-performance-2018/">&lt;p&gt;Many people claim Ruby is no longer relevant and quite a few people have moved on to Elixir, Go, Rust, and Node. This is because Ruby was not originally built for speed, it was built for ease of use. It does have its limitations and Rails is a monstrosity with all it’s services, workers, etc. But I’ve never had an issue with this, I started using Ruby because of its ease of use. I can from a world of using PHP and ugly spaghetti code to Ruby where coding is more of a thing of art.&lt;/p&gt;

&lt;p&gt;But 2018 has been a big year for Ruby releases and trying to meet their &lt;a href=&quot;https://blog.heroku.com/ruby-3-by-3&quot;&gt;3x3&lt;/a&gt; performance goals (&lt;a href=&quot;https://developers.redhat.com/blog/2018/03/22/ruby-3x3-performance-goal/&quot;&gt;RedHat Writeup&lt;/a&gt;). And in the last year alone, &lt;a href=&quot;https://twitter.com/tenderlove&quot;&gt;Arron Patterson (tenderlove)&lt;/a&gt; and various contributors have made amazing advances in improving Ruby’s performance. And the addition of a &lt;a href=&quot;https://www.ruby-lang.org/en/news/2018/05/31/ruby-2-6-0-preview2-released/&quot;&gt;JIT compiler&lt;/a&gt; to Ruby is no ease feat that looks like it will also have a HUGE effect on Ruby to regain some ground and no longer be known as a “slow language”.
I admit &lt;a href=&quot;https://github.com/oracle/truffleruby&quot;&gt;Ruby Truffle&lt;/a&gt; has some extreme potential to improve Rubys performance using the &lt;a href=&quot;https://www.graalvm.org/&quot;&gt;GraalVM&lt;/a&gt; but since Oracle does have a tendency to take people to court and suing them, for using their various technological components.&lt;/p&gt;

&lt;p&gt;Another modification that I have found that dramatically improves performance and reduces memory usage is by adding &lt;a href=&quot;http://jemalloc.net/&quot;&gt;jemalloc&lt;/a&gt;. By default, the MRI version uses the glibc memalloc library.&lt;/p&gt;

&lt;p&gt;To use jemalloc with ruby lets first install the library, so we can use it when compiling out ruby binaries.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# OSx&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;jemalloc

&lt;span class=&quot;c&quot;&gt;# Ubuntu/Debian&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libjemalloc1 libjemalloc-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Many of people prefer &lt;a href=&quot;https://github.com/rbenv/ruby-build&quot;&gt;ruby-build&lt;/a&gt; for compiling new ruby versions but I prefer &lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; because of it’s ease of use. Now to compile with jemmalloc, we need to add the flags for RVM to compile using the jemalloc library.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;2.5 &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-jemalloc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--autolibs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;disable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tend to use the &lt;a href=&quot;https://fishshell.com/&quot;&gt;Fish&lt;/a&gt; shell, it has dramatically increased my productivity with its ease of use, auto completion libraries, and great features. So to make compiling a new RVM instance easier I created a function titled &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm_install&lt;/code&gt; so now when I want to compile a new Ruby version with the jemalloc flag I issue a command similar to the following &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm_install 2.6&lt;/code&gt; and wait. Below is a copy of the function I created, I know I should probably issue some validation to verify the value of the argument, but I’m the only one using this on my computer and it’s works wonders for what I need it for.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Install the specified Ruby version through RVM, with the jemalloc library included&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;rvm_install
  &lt;span class=&quot;c&quot;&gt;# verify a version number was specified&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;count &lt;span class=&quot;nv&quot;&gt;$argv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Installing Ruby-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$argv&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; with jemalloc&quot;&lt;/span&gt;
    rvm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$argv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-jemalloc&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please specify a version to install.&quot;&lt;/span&gt;
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets take a look at a few Ruby versions to test how well they perform with and without jemalloc. Sam Saffron’s &lt;a href=&quot;https://github.com/SamSaffron/allocator_bench/blob/master/stress_mem.rb&quot;&gt;stress test&lt;/a&gt; is a great way to compare performance gains and memory allocation. And let me reiterate that I didn’t just run this test a single time and compare the results. These use the averages after running each stress test several times.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Results for Ruby_v2.5.0p0&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.542045&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;RSS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;137860&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Ruby_v2.5.0p0 with jemmalloc&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.420393&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;RSS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;129616&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Faster&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jemalloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;0.222347725251767&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faster&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Ruby_v2.6.0-preview2 with jemalloc&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.743956&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;RSS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;144108&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Faster than 2.5&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;0.09115918792980371&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faster&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, just adding jemalloc to MRI ruby adds quite a noticeable performance gain. And even when not using a different memory allocator, each new Ruby release has had quite a significant impact on building on the languages potential.&lt;/p&gt;

&lt;p&gt;~ &lt;strong&gt;NOTE:&lt;/strong&gt; These tests are performed on a MBP with OSx 10.12,  a 2.2ghz i7, 16GB of RAM, and a SSD. So the results may vary from device to device.&lt;/p&gt;</content><author><name>Brandon</name></author><category term="performance" /><category term="ruby" /></entry><entry><title type="html">MikroTik - Mobile Rate-Limiting</title><link href="https://theworkaround.com/2018/05/05/mikrotik-mobile-rate-limiting/" rel="alternate" type="text/html" title="MikroTik - Mobile Rate-Limiting" /><published>2018-05-05T00:00:00+00:00</published><updated>2018-05-05T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2018-05-05-mikrotik---mobile-rate-limiting.md</id><content type="html" xml:base="https://theworkaround.com/2018/05/05/mikrotik-mobile-rate-limiting/">&lt;p&gt;&lt;img src=&quot;/images/posts/mikrotik.png&quot; alt=&quot;&quot; class=&quot;img-fluid w-3/12&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-brief-intro&quot;&gt;A Brief Intro&lt;/h3&gt;

&lt;p&gt;I’ve been using Mikrotik routers for about a year now and I’ve had nothing but an amazing experience thus far.
I haven’t taken any of the &lt;a href=&quot;https://mikrotik.com/training/&quot;&gt;certification&lt;/a&gt; training courses (MTCNA, MTCRE, MTCWE) for the Mikrotik routers and thus far all my learning has been hands more of a hands on experience and following the RouterOS &lt;a href=&quot;https://wiki.mikrotik.com/wiki/Manual:TOC&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main reason I got into was Mikrotik routers, was when I started at my current position a little over a year go I was expected to “make some magic happen”. You see I work a nonprofit that occupies several buildings all interconnected, with the internet piped through a fiber line. I knew there was issues after my first couple of days, because they were using a consumer grade NetGear (&lt;a href=&quot;https://www.netgear.com/landings/ad7200/&quot;&gt;NightHawk x10&lt;/a&gt;) router to try and support everything. There’s generally anywhere between 30-70 people in the building at any time; and considering everyone has a laptop or 2, a VoIP Phone, a cellphone, some have PC’s, and some people even have various smart devices connected as well. This was by far, way to many devices for the basic hone grade router to manage. And the network congestion was terrible; calls were always dropping, active IP addresses were being reassigned, your Upload and Download rates were absolutely terrible.&lt;/p&gt;

&lt;p&gt;I has never seen anything like it and I was definitely out of my scope of knowledge. I’m a web developer, not a networking administrator. But this issue with working at a nonprofit if options are limited and as the IT guy I’m expected to solve a large amount of issues at any given time. To help resolve this issue I contacted an acquaintance of mine manages the networking infrastructure of a chain of convenience stores, rest stores, and office buildings within the area.&lt;/p&gt;

&lt;p&gt;He recommended I use MikroTik routers because their cheap, highly efficient, easy to learn, and you don’t have to pay any crazy licensing fees. So my first introduction to the router was jumping straight into using out of the &lt;a href=&quot;https://mikrotik.com/product/CCR1016-12G&quot;&gt;CCR1016-12G&lt;/a&gt; Cloud-Core Router. And I’ve have had nothing but excellent results with it, thus far.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;now-to-the-issue&quot;&gt;Now To the Issue&lt;/h3&gt;

&lt;p&gt;Across the facility here are is a large number of devices assigned static IP addresses; ie. printers, VoIP phones, and several special purpose devices. Now we always have people coming from all over for meetings, training, consultation, etc. So in any one day you may have a few hundred devices connect to the network. And having a huge wireless network with a plethora of devices always connecting to the network can be a nightmare. To ensure a quality network experience, I reduced DHCP lifespans to 10 minutes this removes devices from the DHCP table after a short amount of time. I also setup a rollover subnet, so when the basic subnet chain was full it starts assigning IP addresses to a secondary subnet. I also have a default rate-limit (Queues) for when a new device connects to the network.&lt;/p&gt;

&lt;p&gt;Now one of the biggest issues we have is people using a ton of bandwidth on social media. Part of the problem is; we have several people who do marketing, advertising, and outreach across various social media mediums including but not limited to facebook, twitter, youtube, and few others. But we all known, people like to stream videos, baseball games, concerts, and tons of high bandwidth streams with their phones when visiting these sites.&lt;/p&gt;

&lt;p&gt;To counter this, I decided it’d be a good idea to specifically rate-limit/set Queue speeds for mobile devices. This isn’t a fool proof method, but it does tend to catch about 99% of all mobile devices that connect to the network. It compares the devices $hostname to a regular expression list of mobile device manufacturers.
To setup up the regular expression you goto: IP&amp;gt;Firewall&amp;gt; [Tab] layer7 Protocols, you’ll than create a new Firewall L7 protocol and label it &lt;code class=&quot;highlighter-rouge&quot;&gt;mobileDevices&lt;/code&gt; with the following regex.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ANDROID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppleWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BLACKBERRY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Galaxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HTC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Huaweu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iPhne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Moto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SAMSUNG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Xperia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll now create a scheduler by going to System&amp;gt;Scheduler and clicking the blue plus button. I went conservatively assigned it to loop through every 5 minutes, if you’re in a pretty busy office I’d say you may even want to do 2 minute intervals. I’d also say part of this script is unnecessary, but I decided to reassign the queue limits to non mobile devices just for secondary measures. And the second loop in the script is because I have various VIP devices that need higher bandwidth limits than the rest of the network. So they are specifically assigned static IP address with their queue limits. Like I said, about half this script isn’t necessary, but I implemented it in just to take precautions.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/queue simple find&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;layer7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ ip firewall layer7-protocol find name=&quot;mobileDevices&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mobileDevices&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ ip firewall layer7-protocol get $layer7 regexp&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mobileLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1024k/1024k&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pcLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;3M/5M&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// if the specified device&apos;s IP address is being assigned with DHCP&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease find dynamic=yes] do=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ipAddr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i address]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i host-name]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;macAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i mac-address&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queueName&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Client - $macAddress&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$mobileDevices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// if the device has been found to be a mobile device, reduce it&apos;s bandwidth - $mobileLimit&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$mobileLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// otherwise set the devices bandwidth limits to the default bandwidth limits - $pcLimit&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$pcLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// If device is connected with a static IP address or not using DHCP to assign it&apos;s IP&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease find dynamic=no] do=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ipAddr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i address]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i host-name]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;macAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ip dhcp-server lease get $i mac-address&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queueName&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Client - $macAddress&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vipLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;10M/10M&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// hostnames for VIP devices in which to have a high bandwidth limit - $vipLimit&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;VIPdesktops&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;VIPlaptops&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;VIPdevice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$vipLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// otherwise set the devices bandwidth limits to the default bandwidth limits - $pcLimit&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$pcLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This isn’t a fool proof method, but it does catch the vast majority of mobile devices. This is because by default their devices are labeled with their specific manufacturer as part of the device name. And for the most rarely does anyone ever rename their devices hostname. While watching the network traffic, I can say I’ve only saw a handful of mobile devices that haven’t been labeled with either Samsung, Iphone, or Galaxy.&lt;/p&gt;

&lt;p&gt;~ &lt;strong&gt;Note:&lt;/strong&gt; This may not be the best or the most effective script for what I wanted to achieve, but it accomplished what I needed to do. And it’s been tested and proven to work effectively for exactly what I needed.&lt;/p&gt;

&lt;h5 id=&quot;updated-53118&quot;&gt;UPDATED: &lt;small class=&quot;text-muted&quot;&gt;5/31/18&lt;/small&gt;&lt;/h5&gt;

&lt;p&gt;After updating our Routers’ packages and routerboad to v6.42.3, I begun having issues with the script showing above.
So I removed the Layer7 and revamped the script to use it hostname matches through a variable string. The new revision appears to run a bit faster than the previous version and in my opinion, it seems to be a bit easier to read.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/queue simple find&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mobileDevices&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;android|ANDROID|AppleWatch|BLACKBERRY|Galaxy|HTC|Huawei|iPad|iPhone|iphone|iPhne|Moto|SAMSUNG|Unknown|Xperia&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mobileLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1024k/1024k&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pcLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2M/5M&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vipDevices&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;VIPdesktops|VIPlaptops|VIPdevice|VIPservers|MikroTik|CapAC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vipLimit&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;10M/10M&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dhcp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lease&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dynamic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bound&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeMacAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;macAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ipAddr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queueName&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Client - $macAddress&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$mobileDevices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$mobileLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$pcLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dynamic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bound&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeMacAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;macAddress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ipAddr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queueName&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Client - $macAddress&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

   &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$vipDevices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$vipLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$queueName&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$hostname&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$ipAddr&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$pcLimit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Brandon</name></author><category term="mikrotik" /><category term="networking" /><category term="routers" /></entry><entry><title type="html">2017 - Was a Year of Change</title><link href="https://theworkaround.com/2018/03/01/2017-a-year-of-change/" rel="alternate" type="text/html" title="2017 - Was a Year of Change" /><published>2018-03-01T00:00:00+00:00</published><updated>2018-03-01T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2018-03-01-2017---a-year-of-change.md</id><content type="html" xml:base="https://theworkaround.com/2018/03/01/2017-a-year-of-change/">&lt;p&gt;Let me start off by saying, it’s been one heck of a year and so much has changed in my life, it’s almost unrecognizable. To start, I had a few career changes; I went from doing IT support for a car rental agency to being laid off. Being laid off was quite an uncomfortable experience, because I have kids and a family to support. While waiting to get hired I used this downtime as a learning experience and worked on various projects. At least, until I got some contract work. At first, it was a dream come true, working as a developer, getting paid for what I loved. There were several very smart developers in which I was working with and learning from.&lt;/p&gt;

&lt;p&gt;That was until the owner slowly started cutting everyone’s checks back and saying “Oh sorry I’ll add it onto your next check.” And then after a few missed and partial payments, he completely disappeared. Or at least stopped all contact with my team. One-by-one, we were all removed from the various SasS services in which we had used. We were removed from the GitHub repos, time-trackers, invoicing, etc. Luckily I still have a local copy of the git repo, if I ever have to prove any of my work.&lt;/p&gt;

&lt;p&gt;From here I was kind of desperate for work and took the first thing that came along. For several months, I actually worked for a local locksmith and it was quite the learning experience. Don’t get my wrong; I respect the hell out of any locksmith out there it just wasn’t for me.&lt;/p&gt;

&lt;p&gt;But I lucked out and for the past year or, so I’ve been the Web Developer/IT Coordinator for a pretty sizable Non-Profit within my area. For the most part of really enjoy my job, but like any job some days it can be quite trying. This is because some days I’m doing data entry and adding info to one of the databases or helping an older lady re-sync her email, or do a sum formula in excel. And other days I’m mounting a new rack router, patch panel, and running Cat6 through one of our several buildings. And sometimes I’m working on one of the several websites our organization operates. I’m always writing code to assist with certain tasks, it may go unnoticed. But I think of it as; if it gets noticed then I did something wrong.&lt;/p&gt;

&lt;p&gt;One of my biggest accomplishments thus far has to be the upgrade of the organizations networking. First of all, I’m not a networking/telecommunications expert, but I know when your not using the right equipment. When I first started they had networking equipment that would have been great for a home based setup. But when you have 70+ users at any given time with multiple devices hooked up to the network. Each person has the following VoIP Phone, Laptop, and usually their cellphones as well. This just don’t work well with a low quality home router. Their network was always congested, phone calls were choppy, their DHCP server was only allowing a range of 70 devices so every few minutes several peoples phones, laptops, or other devices were getting kicked from the network.&lt;/p&gt;

&lt;p&gt;I came in and pulled out several of the little crappy routers and added a few centralized switches. And hooked everything into a &lt;a href=&quot;https://mikrotik.com/&quot;&gt;MikroTik&lt;/a&gt; Cloud-Core Router. I’ve spent the last several months learning the ins, outs, and little gotchas of this machine (and far from being an expert). At first, it was &lt;em&gt;extremely&lt;/em&gt; intimidating, but the more I play with it; the more I’ve come to love and appreciate it. I’m absolutely locked on using MikroTik routers now, they’re great for home, business, or whatever needs you may require. Heck they even have some amazing Hotspots you can manage through the routers as well. One of my other favorite things about the MikroTik Routers’, is unlike your regular home routers you can build scripts, schedules, or filters to do whatever you absolutely want with your device.&lt;/p&gt;

&lt;p&gt;My accomplishments aren’t limited to just networking, since working at my current position I’ve helped build several websites. Most of them are for various causes in which we are associated with and others are to promote our various programs, or generate revenue for the organization. We’ve got an Outreach/Media guy and a Public Relations associate. But seeing as how I’m really the only one who does any web development/programming everything that’s been put on my plate, has been a pick-and-choose opportunity. Some projects are exciting are quite exiting to work on. But occasionally I’ve had more than a full plate and had to pass on them.&lt;/p&gt;

&lt;p&gt;One of the great things about not being limited to a specific technology by the organization is it has allowed me to pickup and learn various other technologies. Over the last several months I’ve picked up and learned &lt;a href=&quot;https://vuejs.org/&quot;&gt;VueJS&lt;/a&gt;, which is an absolutely amazing JavaScript framework. I’ve never been a heavy JavaScript user, more like I had been disgusted with the state of JavaScript. jQuery made the world a mess and old snippet sites such as &lt;a href=&quot;http://dynamicdrive.com/&quot;&gt;Dynamic Drive&lt;/a&gt; are out of touch with modern needs. But &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;ES6&lt;/a&gt; combined with &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt;, and &lt;a href=&quot;https://www.emberjs.com/&quot;&gt;Ember&lt;/a&gt; have completely changed the dynamic of modern web applications. With the introduction to VueJS my love for frontend development has returned and I’ve been jumping at various projects to expand on my knowledge, experience, and to try new and exciting things.&lt;/p&gt;</content><author><name>Brandon</name></author><category term="life" /></entry><entry><title type="html">Mapping an ArcGIS Parcel dataset as a Mapbox tileset</title><link href="https://theworkaround.com/2016/12/15/mapping-an-arcgis-parcel-dataset-as-a-mapbox-tileset/" rel="alternate" type="text/html" title="Mapping an ArcGIS Parcel dataset as a Mapbox tileset" /><published>2016-12-15T00:00:00+00:00</published><updated>2016-12-15T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2016-12-15-mapping-an-arcgis-parcel-dataset-as-a-mapbox-tileset.md</id><content type="html" xml:base="https://theworkaround.com/2016/12/15/mapping-an-arcgis-parcel-dataset-as-a-mapbox-tileset/">&lt;p&gt;Before I get begin on how I mapped out several large datasets for &lt;a href=&quot;http://sanjuanmaps.com/&quot;&gt;SanJuanMaps&lt;/a&gt;,
I would like to say that there was plenty of &lt;a href=&quot;https://www.mapbox.com/gallery/&quot;&gt;inspiration&lt;/a&gt; behind my actions.
I was especially inspired by &lt;a href=&quot;https://twitter.com/caged&quot;&gt;Justin Palmer’s&lt;/a&gt; - &lt;a href=&quot;http://labratrevenge.com/pdx/#12/45.4800/-122.6706&quot;&gt;The Age of a City&lt;/a&gt;.
Where he tastefully mapped out all the building ages of Portland, Oregon.
But what sets my county maps apart from various other is that I didn’t just map out buildings, people, or objects.
I mapped out several sets of data including: building age, building zoning types, current active well sites, and recent crimes.&lt;/p&gt;

&lt;h2 id=&quot;loading-the-parcel-map&quot;&gt;Loading the Parcel Map&lt;/h2&gt;
&lt;p&gt;Depending on your city, state, or county it may be a struggle struggle to get a hold of your local GIS information.
But for me, I was able to find my counties GIS information for all buildings (not located on federal and/or local reservation land).
It took jumping through a few hoops in order to make the data loadable and usable for processing.&lt;/p&gt;

&lt;p&gt;To begin San Juan County currently allows you to download a 240MB zip file, thats supposed to contain all GIS information through out the area.
This zip file contains numerous files, but the most important one is a &lt;a href=&quot;http://www.dbase.com/&quot;&gt;dBase&lt;/a&gt; file &lt;code class=&quot;highlighter-rouge&quot;&gt;*.dbf&lt;/code&gt;.
This database table is linked to several ArcGis index files &lt;code class=&quot;highlighter-rouge&quot;&gt;*.atx&lt;/code&gt;, meaning that each database column has a unique atx file (phys_address, ownerName, ect).
Now that we have access to the GIS dataset, there are a few ways we can access the data in which in contains.
Now let me ask; who wants to pay &lt;a href=&quot;http://www.arcgis.com/features/plans/pricing.html&quot;&gt;hundreds&lt;/a&gt; of dollars to access a GIS file that’ll we’ll be only using a handful of times? Don’t get me wrong, ArcGIS is one hell of a product and if you plan on working with GIS information often or with large datasets it’s worth it. But since this is a one in a blue moon type thing for me I’ll stick with using &lt;a href=&quot;http://www.qgis.org/&quot;&gt;QGIS&lt;/a&gt;, which is an Open-Source GIS projection application. In order to get the application running there are several components that we’ll require, but in the long run it’s well worth.&lt;/p&gt;

&lt;p&gt;Now lets= begin with starting up QGIS and opening up the &lt;code class=&quot;highlighter-rouge&quot;&gt;.dbx&lt;/code&gt; file as stated before.
Since this is a pretty significant file with a ton of datapoints and components, it will take a few moments for everything to load.
Once the parcel project loads, you may be faced with a very intricate map that looks similar to CAD wireframe. Your on the right path, lets slow down for a moment. Now an easy way to think of it, is to consider these map components as vector points similar to using the Pen Tool to build shapes in Adobe Illustrator.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mapping_arcgis/gis_grid500.jpg&quot; alt=&quot;GIS Grid&quot; class=&quot;img-fluid center-block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Except this GIS map doesn’t just include points to create a layout of buildings (these is quite a bit of meta-data included with each component on the map).
If you zoom in and switch to the Identify Features/vector information tool and click individual plots or buildings you’ll notice it allows you to view information for each parcel. Which consists of tons of information used by the county to identify the area (PARCELNO, GrossAcres, PhysAddr, ACCTTYPE, etc.). Now this doesn’t seem like it’ll be anything important, but when we convert the dBase table to a PostGIS table each one of these attributes will be used as a column to identify each and every building throughout the county.&lt;/p&gt;

&lt;h2 id=&quot;understanding-coordinate-reference-systems-and-projections&quot;&gt;Understanding Coordinate Reference Systems and Projections&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;~ &lt;strong&gt;Note:&lt;/strong&gt; This section is not require to read, but helps with understanding why we need to perform a CRS conversion.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before we get started on converting the parcel dataset to a database table, lets talk about &lt;a href=&quot;https://docs.qgis.org/2.8/en/docs/gentle_gis_introduction/coordinate_reference_systems.html&quot;&gt;Coordinate Reference Systems (CRS)&lt;/a&gt;.
Wait, why aren’t we just using latitude/longitude?
With different maps, we use different coordinate systems. Geographic Coordinate Systems use latitude/longitude
and Projected Coordinate Systems use points (X and Y) that originate at a specified lat/long.
Think of Projected Coordinate Systems as a window frame, it’s got its one size, area, and dimensions.
But no matter how you look at it, all these glass panes end up going together and making one big window.&lt;/p&gt;

&lt;p&gt;Lets try to look at why there have been several methods developed to map the Earth’s surface (&lt;a href=&quot;https://en.wikipedia.org/wiki/Mercator_projection&quot;&gt;Mercator&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Sinusoidal_projection&quot;&gt;Flamsteed-Sinusoidal&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylindrical_equal-area_projection&quot;&gt;Equal area&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Azimuthal_equidistant_projection&quot;&gt;Equidistant&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Albers_projection&quot;&gt;Albers&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Lambert_projection&quot;&gt;Lambert&lt;/a&gt;, and &lt;a href=&quot;http://webhelp.esri.com/arcgisdesktop/9.2/index.cfm?TopicName=List_of_supported_map_projections&quot;&gt;many more&lt;/a&gt;).
Now I know what your thinking, “What are all these different projections for? And why would I care?”
Throughout the years &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_cartographers&quot;&gt;cartographers&lt;/a&gt; have experimented with creating projections in which they thought was best for mapping out land, water, cities, and the various features of our planet.
And many of them were quite accurate for their time, while others have been slightly &lt;a href=&quot;http://www.livescience.com/14754-ingenious-flat-earth-theory-revealed-map.html&quot;&gt;narrow minded&lt;/a&gt; at depicting the earth.&lt;/p&gt;

&lt;p&gt;As we can see, it’s no easy task depicting a spherical planet and all of it’s features as a flat surface.
This topographical projection types are called an &lt;a href=&quot;https://en.wikipedia.org/wiki/Earth_ellipsoid&quot;&gt;ellipsoid&lt;/a&gt;.
No matter what sort of map is used, they have always been an important asset for traveling, freight, military operations, and space travel. Some of these projections are better at depicting land forms, street planning, distances, or scale and accuracy but each one had its place and time.
Now the point is, it &lt;a href=&quot;http://www.directionsmag.com/site/latlong-converter/&quot;&gt;doesn’t matter&lt;/a&gt; if your using degrees (25 is degrees, 35 is minutes, and 22.3 is seconds), meters, decimal degrees (25.58952777777778), or whatever plot point method you &lt;em&gt;should&lt;/em&gt; always going to end up at approximately the same place.&lt;/p&gt;

&lt;p&gt;So &lt;a href=&quot;https://www.maptoaster.com/maptoaster-topo-nz/articles/projection/datum-projection.html&quot;&gt;what is a datum&lt;/a&gt;? In my opinion the easiest way to explain a &lt;a href=&quot;http://oceanservice.noaa.gov/facts/datum.html&quot;&gt;datum&lt;/a&gt; is by stating it is a standard or method for mapping geographic coordinates to a projection. A datum can consist of various datasets or an individual GIS vector, but generally consists of a large set of data points to be mapped out (roads, buildings, elevation changes, land formations, water, etc).&lt;/p&gt;

&lt;p&gt;Mapping with GIS can be a really complicated task, but with the right tools it can make things quite a bit easier.&lt;/p&gt;

&lt;h2 id=&quot;lets-convert-it-to-usable-data&quot;&gt;Let’s convert it to usable data&lt;/h2&gt;

&lt;p&gt;The ArcGIS data in which we obtained through the county is geo-formatted using the &lt;a href=&quot;https://en.wikipedia.org/wiki/GRS_80&quot;&gt;GRS:80&lt;/a&gt; reference system.
QGIS will display this and various other attributes when loading up the vector map projection.
When looking at the data you should see something similar to the following attributes upon loading up the map.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000001&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Generated&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CRS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;proj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmerc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lat_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lon_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;107.8333333333333&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9999166666666667&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;829999.9999999998&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ellps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GRS80&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;towgs84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;us&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;no_defs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are now very much on our way to having a data projection of usable data for mapping out the county.
The only issue we are going to have at this point is the majority of online mapping tools use the &lt;a href=&quot;https://confluence.qps.nl/pages/viewpage.action?pageId=29855173&quot;&gt;EPSG:4326/WGS84&lt;/a&gt; standard for projecting data.
This can easy be achieved by reprojecting the layer with WGS84 coordinates.
&lt;strong&gt;Go To:&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Menu -&amp;gt; Processing -&amp;gt; Toolbox -&amp;gt; QGIS geoalgorithms -&amp;gt; Vector General Tools -&amp;gt; Reproject Layer&lt;/code&gt;.
Another method is if you have the Toolbox side already open you can just search for the tool &lt;code class=&quot;highlighter-rouge&quot;&gt;Reproject Layer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/mapping_arcgis/reproject_layer.png&quot; alt=&quot;Reprojected Layer&quot; class=&quot;img-fluid center-block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You than set the “Target CRS” as EPSG:4326/WGS84 in the dropdown menu, but we warned depending on your computer this may take a while. Because some of the structures have numerous repetitive points, I had to reduce the point precision in order to keep my computer from freezing up when I would reproject the layer. This can be be found in the toolbox under &lt;code class=&quot;highlighter-rouge&quot;&gt;Grass -&amp;gt; Vector -&amp;gt; v.clean&lt;/code&gt;. Be warned if you do need to use this feature, I suggest that you use it sparingly because it can and will readjust the boundaries of various structures.&lt;/p&gt;

&lt;p&gt;Now lets save the data as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Well-known_text&quot;&gt;WTK&lt;/a&gt; CSV file, to make it easier to load all the counties properties and their attributes into a database. To do this, rather than saving the project you right-click the Layer and Save-As.
From here make sure you need to change the CRS to &lt;code class=&quot;highlighter-rouge&quot;&gt;Default CRS (EPSG:4326 - WGS 84)&lt;/code&gt; and that the format is &lt;code class=&quot;highlighter-rouge&quot;&gt;CSV&lt;/code&gt;.
The next important thing is to force the Geomerty to be expost as &lt;code class=&quot;highlighter-rouge&quot;&gt;AS_WKT&lt;/code&gt; and the CSV seperator is &lt;code class=&quot;highlighter-rouge&quot;&gt;COMMA&lt;/code&gt;.
Now saving may take a while, because there’s quite a few properties that need to have its properties converted to csv.&lt;/p&gt;

&lt;p&gt;Many people may not realize it, but CSV files aren’t just large datafiles that you can open up in excel.
If you think about, it’s pretty much a plain text database file. It’s a pretty efficient way for accessing data but it can be bulking and slow depending on your editor. With 81000 or so rows, it locks up and freezes &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; and it even slows down &lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;Sublime&lt;/a&gt; significantly, with 16gb of RAM. But we’re not going to be editing them in an IDE, we’ll be loading them in &lt;a href=&quot;https://postgresapp.com/&quot;&gt;Postgres&lt;/a&gt;. This because Postgres supports &lt;a href=&quot;http://postgis.net/&quot;&gt;GIS&lt;/a&gt; data structures and is very efficient at processing large amounts of data.&lt;/p&gt;

&lt;p&gt;Before we import the data into Postgres, we need to insure we have proper table structure.
And at the moment, one of my favorite tools for building database into out of CSV files by using &lt;a href=&quot;https://csvkit.readthedocs.io/en/0.9.1/index.html&quot;&gt;csvkit&lt;/a&gt;.
If you’ve never used it, it lets you print column names, convert CSV to JSON, reorder columns, import to SQL, and much more.&lt;/p&gt;

&lt;p&gt;Now normally we’d just attempt to build the database scheme with the following command.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;csvsql &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; postgresql Buildings.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But since there are so many rows, the python script will probably freeze up or start consuming a HUGE amount of memory.
So in order to make it more efficient, we’ll get the first 20 rows of data.
And using command line piping we’ll send the data to the csv tool for processing.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 20 Buildings.csv | csvsql &lt;span class=&quot;nt&quot;&gt;--no-constraints&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--table&lt;/span&gt; buildings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Depending on the information available, your SQL output should be something similar to the following.
Several of these columns we’ll never even use, but for now it’s better to not chance corrupting any of our fields.
Before you go any farther be sure to change the geometry field names to geom and if CSVKIT labels geom as a VARCHAR for the geometry property type.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;buildings&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geometry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ogc_fid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parcelno&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BIGINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accountno&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;grossacres&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;FLOAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accttype&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ownername&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ownername2&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;owneraddr&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ownctystzp&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;subdivis&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;legaldesc&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;legaldesc2&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;weblink&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;physaddr&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;physcity&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;physzip&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;VARCHAR&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Depending on the GIS software you used, I had various issues with the CSV file that I needed to correct before importing it.
The issues that we’ll encounter involve the geometry field. Since CSV fields are separated by commas Postgres tries to import the polygons coordinates as separate columns as well.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;POLYGON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195455993822&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;979941009114&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2075189351198&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R0051867&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EXEMPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNITED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMERICA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;US&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEPT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6251&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COLLEGE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLVD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;FARMINGTON, NM 87402&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRACT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;THE&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SESW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NESW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NWSE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;153213&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DESCRIBED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CARD&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;BK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1172&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;996&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NM&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LA_PLATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to fix this, we need to quote the geometry column in order to make it a field of it’s own.
With Sublime’s find/replace REGEX functionality this would be very straight forward step.
In order to find the rows with the issue, I used the following &lt;code class=&quot;highlighter-rouge&quot;&gt;^(?!&quot;POLYGON)&lt;/code&gt;.
Out of 81000 or so columns, there were only a few hundred rows with this issue that needed to be changed.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;&quot;POLYGON ((-108.195455993822 36.979941009114,-108.195717330387 36.987213809214,-108.19557299488 36.987214765187))&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2075189351198&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R0051867&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EXEMPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNITED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMERICA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;US&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEPT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6251&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COLLEGE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLVD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;FARMINGTON, NM 87402&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRACT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;THE&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SESW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NESW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NWSE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OF&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;153213&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DESCRIBED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CARD&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;BK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1172&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;996&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NM&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LA_PLATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;importing-the-data-into-postgres&quot;&gt;Importing the data into Postgres&lt;/h3&gt;

&lt;p&gt;Now before we import the dataset, lets enable the &lt;a href=&quot;http://postgis.net/&quot;&gt;PostGIS&lt;/a&gt; extension so the database can process the buildings vectors properly.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTENSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now depending on how your managing your database, you either import the CSV file through pgAdmin or through the command line.
I chose the the command line, because of its speed and convenience.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;copy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/Tarellel/Desktop/SJC_GIS/Exported/Buildings.csv&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELIMITER&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;,&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CSV&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Compared to loading data in IDE’s and/or Excel, Postgres is extremely fast at accessing, modifying, and deleting rows, columns, and fields.
Depending on what data you plan on mapping you may not need to make any additional changes. I’m going to be mapping out all building ages in the county, so I needed to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;built_in&lt;/code&gt; column to the table, for the year in which the structure was built.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built_in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re like me, you probably already started doing queries to verify the integrity of the information imported.
Something you may notice is that the structures geometry field no longer looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;POLYGON ((-108.195455993822 36.979941009114,-108.195717330387 36.987213809214,-108.19557299488 36.987214765187))&quot;&lt;/code&gt;. That is because PostGIS stores the locations as a binary specification, but when queried the information is viewed as a hex-encoded string. This makes it easier for PostGIS to store and project the data as various data projection formats.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;01030000000100000005000000&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F9A232DD00065BC034E0D442D7594240F0567E50FB055BC094B9B760D55942409E97C29CFE055BC0CAC4E0D8BB594240080B801404065BC0440327CEBD594240F9A232DD00065BC034E0D442D7594240&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lets-fetch-the-buildproperties-initial-build-date&quot;&gt;Lets fetch the build/properties initial build date&lt;/h3&gt;

&lt;p&gt;In order to get each and every buildings initial build date,
I ended up using nokogiri to scan the county assessors property listings for their initial build dates.
Don’t get me wrong, I tried to look for an easy way to get the information.
But they have no publicly accessible API for pulling data requests and never received a response from anyone I attempted to contact.
So, I used the next best thing, farmed the counties web site for property listing information.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For warning,&lt;/em&gt; This script was build to be quick and simple solution,
rather than being well formatted and following best practices.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;pg&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;open-uri&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;nokogiri&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;restclient&apos;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Fetch current buildings across the County and determine their build date&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FetchYear&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;###&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Setup initial required variables, for processing all properties&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ----------&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# A connection to the database is required for request and updates&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;dbname: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;SJC_Properties&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@base_link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;http://county_assessor.url&apos;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;###&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Fetches the next X(number) of buildings&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# all selects require that built_in year field to be empty, to prevent an infinite loop&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetch_buildings&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;SELECT * FROM buildings WHERE weblink IS NOT NULL AND built_in IS NULL AND built_in != 0 LIMIT 50&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# if any results are found, begin processing them to get the properties link/year build&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# for some reason, some buildings are empty on most fields&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# if no weblink is supplied, skip it&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# ie: &quot;parcelno&quot;=&amp;gt;&quot;2063170454509&quot;&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;weblink&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch_weblink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;# Attempt to fetch the properties build_date&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# Note: some properties are EXEMPT and/or Vacacent&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# so no built_date will be specified&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;built_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch_yearbuilt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;update_build_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;It appears all database rows have been processed&apos;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Private: Fetches the properties unique information URI from the requested&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# SJC assessors page&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ----------------------------------------&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# building - all attributes for the current building/residence being processed&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Returns: Returns the properties unique information UIR&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetch_weblink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;building&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# If it processes successfully attempt to load the Redidental/Commercial page&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Other output the error&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Page required the visitor be logged in as a guest, with a GET form request&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;no&quot;&gt;RestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;building&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;weblink&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                  &lt;span class=&quot;ss&quot;&gt;cookies: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;isLoggedInAsPublic: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;true&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Each property contains a unique URL similar to:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# http://county_assessor.url/account.jsp?accountNum=R0070358&amp;amp;doc=R0070358.COMMERCIAL1.1456528185534&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Winthin the left sidebar there is a link table that contains the accttype&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# and based on the accttype/property-type each link will be different&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;building&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;accttype&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Select the property when it is a class of Residential&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;RESIDENTIAL&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;MULTI_FAMILY&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;RES_MIX&apos;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;#left&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;//a[contains(text(), &quot;Residential&quot;)]&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;a[href]&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Process Commercial based Properties&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;COMMERCIAL&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;COMM_MIX&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;MH_ON_PERM&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;PARTIAL_EXEMPT&apos;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;#left&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;//a[contains(text(), &quot;Commercial/Ag&quot;)]&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;a[href]&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Some Vacant and EXEMPT properties only have land listed with no building data available&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# When this is the case or default to no type, return a 0.&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Because no building info is currently available&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;EXEMPT&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;VACANT_LAND&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;AGRICULTURAL&apos;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Some properties have several links, pull the first/original building info&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;first_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;404 Not Found&apos;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Page not found&apos;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Error loading this page&apos;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetch_yearbuilt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Load the URL for the buildings summary&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                  &lt;span class=&quot;no&quot;&gt;RestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;ss&quot;&gt;cookies: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;isLoggedInAsPublic: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;true&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;yearbuilt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;tr&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;//span[contains(text(), &quot;Actual Year Built&quot;)]&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;span&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# year must be stripped and turned into an into an integer&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# because it trails with an invisible space &apos;&amp;amp;nbsp;&apos;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;yearbuilt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;--------------------&apos;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Error loading property summary page&apos;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;URL: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;--------------------&apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;###&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Process the current link:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ----------&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# some properties have their attctype listed several times causing errors when processing&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# this is because of upgrades or additions added to the current property&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Returns the first link for the property array&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@base_link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;href&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@base_link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;href&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;###&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Update the database record with the year it was built&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ----------&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# record (hash): The current record/addr in which to update&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# year (int): This will be the year/value that needs to be updated in the record&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_build_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;accountno&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;gt;/ &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;physaddr&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UPDATE buildings SET built_in=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; WHERE accountno=&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;accountno&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&apos; AND physaddr=&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;physaddr&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FetchYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch_buildings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I ran this script over night and came back with a fully populated database and ready for to be fully utilized.
Depending on the server load, each request usually took a few seconds for each building/property.
But one thing that really surprised me, was the counties server had no rate-limiting setup (at least non that I ever experiences).
So I was getting results as fast as my script could run and connect.
I’m sure the next morning it might of looked like a small DDOS attack by a script kiddy with thousands of page loads from a single source.
But I tried to minimize the effect by doing all my data retrieval in the middle of the night, when it would have as little effect as possible.&lt;/p&gt;

&lt;h3 id=&quot;how-the-script-works&quot;&gt;How the Script Works&lt;/h3&gt;

&lt;p&gt;Now, before you start scratching your head thinking “what the hell?” let me explain.
Each and every property has a unique weblink associated with the count assessors office.
When you access the page a cookie &lt;code class=&quot;highlighter-rouge&quot;&gt;isLoggedInAsPublic&lt;/code&gt; is set to true, using a get request.
I believe this is used in order to prevent general web scraping, because if the cookie isn’t set when the page is loaded redirected to a user login.&lt;/p&gt;

&lt;p&gt;I know it looks like a mess and over complicated by let me explain a few things.
But some of the properties are owned by the same owner so we can’t exactly relay on the &lt;code class=&quot;highlighter-rouge&quot;&gt;accountno&lt;/code&gt; to update properties.
And we can’t use &lt;code class=&quot;highlighter-rouge&quot;&gt;physaddr&lt;/code&gt; because some properties have more than one building on them, so we rely on updating several properties.&lt;/p&gt;

&lt;p&gt;And what about the EXEMPT and Vacant properties?
Well the majority of them consists of Churches, Post Offices, Government Buildings, the Airport, and unclassified BLM land.
And yes there are quite a few in the generate area. This is the surrounding area is heavily funded by the government, we’re also a city bordering the edge of several reservations.&lt;/p&gt;

&lt;h3 id=&quot;lets-convert-it-to-a-geojson-file-for-vectoring&quot;&gt;Lets convert it to a GeoJson file for vectoring&lt;/h3&gt;

&lt;p&gt;For those of you who have never used used it, Postgres has amazing support for exporting data as &lt;a href=&quot;http://www.json.org/&quot;&gt;json&lt;/a&gt;.
Some people seem to be unaware that you can resolve to exporting your database queries in different data formats.
And some databases (such as Postgres) also allow you to export your database query returns to various file formats.&lt;/p&gt;

&lt;p&gt;I can assure you, I didn’t get this right on the first even second try.
I’ll honestly admit it took me a few hours to build a query that use the columns I required and would export as a valid &lt;a href=&quot;http://geojson.org/&quot;&gt;GeoJson&lt;/a&gt; format.
I’d say I probably rebuild the query maybe 20 times, each one being completely different each and everyone.
But in the end, I ended up with a swatch of subqueries and assignments that ended exporting the data extremely fast and well structured.
As you can see below, the query may look like a complicated mess.
The funny thing is, it’s a heck of a lot simpler than some of the other query selections I ended up trying to come up with.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;row_to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&apos;FeatureCollection&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;array_to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&apos;Feature&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;row_to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initcap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accttype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ST_AsGeoJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geometry&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lg&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/Tarellel/Desktop/buildings.json&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just a heads up you may be expecting a nice and beautiful json structure similar to the following.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Example from &lt;em&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;geojson-spec data&lt;/a&gt;&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;FeatureCollection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;102.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LineString&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;102.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;103.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;104.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;105.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Polygon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;100.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;101.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;101.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;100.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;100.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;this&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;that&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The query I used ends exporting the data more like a crunched dataset.
Which is great because it dramatically reduces filesize and is a must when optimizing for loading on webpages.
Plus no matter how you use it, it’s not like whatever processor your using is really going to worry about how beautiful your file is, as long as the data is valid.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;FeatureCollection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;102&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LineString&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;102&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;103&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;104&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]},&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Polygon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]]},&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prop1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;this&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;that&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}}]}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that you’ve exported the dataset as a GeoJson file, it’s all downhill from here.
You’ll just need to use the Mapbox &lt;a href=&quot;https://www.mapbox.com/api-documentation/#uploads&quot;&gt;upload API&lt;/a&gt; to upload the file.
From here you can edit and &lt;a href=&quot;https://www.mapbox.com/help/getting-started-studio-datasets/&quot;&gt;style&lt;/a&gt; the data and vector points the way in which you see fit.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Coordinate Reference Systems
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/OverviewCoordinateReferenceSystems.pdf&quot;&gt;Overview of Coordinate Reference Systems&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://docs.qgis.org/2.0/en/docs/gentle_gis_introduction/coordinate_reference_systems.html&quot;&gt;Understanding of Coordinate Reference Systems&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/OverviewCoordinateReferenceSystems.pdf&quot;&gt;Overview of Coordinate Reference Systems&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.ogcnetwork.net/node/338&quot;&gt;Latitude and longitude coordinates are not unique&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://gis.stackexchange.com/questions/23690/is-wgs84-itself-a-coordinate-reference-system&quot;&gt;Is WGS84 itself a Coordinate Reference System?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.ogcnetwork.net/webgeoformats&quot;&gt;Web-Friendly Geo formats&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Spatial_reference_system&quot;&gt;Spatial_reference_system&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geodetic_datum&quot;&gt;Geodetic datum&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://gis.stackexchange.com/questions/664/whats-the-difference-between-a-projection-and-a-datum&quot;&gt;What’s the difference between a projection and a datum?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Round Earth, Flat Maps
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://piecubed.co.uk/flat-world-map-lies/&quot;&gt;Maps are all lies – Representing a spherical earth on a flat world map&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.nationalgeographic.com/features/2000/projections/&quot;&gt;Round Earth, Flat Maps (National Geographic)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.icsm.gov.au/mapping/images/MapProjections.pdf&quot;&gt;Map Projections: From Spherical Earth to Flat Map&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.progonos.com/furuti/MapProj/Normal/CartHow/HowSanson/howSanson.html&quot;&gt;Deducing the Sanson-Flamsteed (sinusoidal) Projection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.progonos.com/furuti/MapProj/Dither/CartProp/DistPres/distPres.html&quot;&gt;Useful Map Properties: Distances and Scale&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GIS : Coordinate Converters
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://webhelp.esri.com/arcgisdesktop/9.2/index.cfm?TopicName=Converting_Degrees_Minutes_Seconds_values_to_Decimal_Degree_values&quot;&gt;Converting Degrees Minutes Seconds values to Decimal Degree values&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.pgc.umn.edu/tools/conversion&quot;&gt;PGC Coordinate Converter&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GeoForms
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.ogcnetwork.net/webgeoformats&quot;&gt;Web-Friendly Geo formats&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Postgres / PostGIS
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.bostongis.com/PrinterFriendly.aspx?content_name=postgis_tut01&quot;&gt;Getting Started With PostGIS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Brandon</name></author><category term="database" /><category term="gis" /><category term="mapbox" /><category term="postgres" /><category term="postgis" /><category term="ruby" /></entry><entry><title type="html">Enhancing SSH Security</title><link href="https://theworkaround.com/2016/11/11/enhancing-ssh-security/" rel="alternate" type="text/html" title="Enhancing SSH Security" /><published>2016-11-11T00:00:00+00:00</published><updated>2016-11-11T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2016-11-11-enhancing-ssh-security.md</id><content type="html" xml:base="https://theworkaround.com/2016/11/11/enhancing-ssh-security/">&lt;p&gt;With the whole security/privacy revolution rolling throughout the internet, it has recently come to my attention
that specific services are being heavily focused on, while others are completely neglected.
When securing your server and it’s services you need to attempt to secure the whole stack rather than a few specific services.
For example lets take a look at web servers, they’re full of new ideas and
technology, innovative, and always changing. And recently the world was recently introduced to &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Lets Encrypt&lt;/a&gt;
which makes them and your data a magnitude of times more secure using HTTPS (when properly configured).&lt;/p&gt;

&lt;p&gt;Another very important service that I’d like you to really think about is SSH.
It’s another service that we use for tons of uses, but you don’t think “Does it need secured”,
because everyone automatically seems to assume that it’s hardened by default.
But in my own words, I’d say “It’s easy to use by default, but not necessarily ready for use”.&lt;/p&gt;

&lt;p&gt;I’m going to assume you’ve already hardened your SSH config with the basic settings (disable root login, AllowUsers, AllowGroups, MaxRetries, Fail2ban, LoginGraceTime, etc.) There’s tons of variable configurations to setup, one place I would suggest starting at would be &lt;a href=&quot;http://tldp.org/LDP/solrhe/Securing-Optimizing-Linux-RH-Edition-v1.3/chap15sec122.html&quot;&gt;Securing and Optimizing Linux&lt;/a&gt; to get a basic configuration setup.&lt;/p&gt;

&lt;p&gt;Now lets get to the main topic of this post, enhanced security.
Lately, I’ve seen quite a bit of talk suggesting everyone disable password
authentication and only using key and/or certificate encryptions to secure SSH connections.
I mean, really how probable is it that someone will be able to generate your exact ssh-key similar to the one below?&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4MCqOxhfmNP/uv8sl5EYSIqQSGuV4v17B50xMWXMcwTJrriOi9W6nNfxF8wu/i2HB1/nUUuSu+ZxQdYaD2cRkelzSGcq191z+b8lNY2lz+bxB547H465U5EQPlxJ5w7WU6QOV1hrZ7quWh/GYrDnU1aZrhEQ++EV5chQIUxoP3YgBSSb8D5Bpns9gR0IZVtlEqhF8eyCypZSiyKumQxK8e/W8Y8iHWCtRfvZbh+bnemCkHrXI/xc+CuCY9TQmWZkwFfTRBJQo3pmoRSZAZpqwYSl1kySrasw771rfy2rowFiCogkBYu2W9FTR2kMwB4btBrpA4Af97AjxwzkHyXUt sample_user@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Well, lets take a look how vulnerable your keys actually are.
If you’re like the vast majority of developers just using a &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;id_dsa.pub&lt;/code&gt; key for the vast majority of your logins and connections, than you may already be an easy target. You may be asking, how and why? Well let’s take a look at some keys people use with github.
If for example you use Github, or a number of services your public key is already out in the open. This is mainly for system wide user verification purposes. For example lets take a moment to look at user &lt;a href=&quot;https://github.com/GrahamCampbell.keys&quot;&gt;GrahamCampbell’s publickey&lt;/a&gt;, now is his key is available what about &lt;a href=&quot;https://gist.github.com/paulmillr/2657075/&quot;&gt;everyone else’s&lt;/a&gt;. If you still don’t trust me try it out with your own profile/username &lt;a href=&quot;https://github.com/username.keys&quot;&gt;https://github.com/username.keys&lt;/a&gt;. Now tell me, how many services do you actually user ur id_rsa key with? If your using this one key for DigitalOcean, GitHub, Google Cloud, AWS, your companies servers, your local NAS, vagrant/Docker and who knows what else, than your services are ready for the taking. Now the simple questions is: How can we fix this?
Well, to begin we can begin by using the &lt;a href=&quot;https://linux.die.net/man/5/ssh_config&quot;&gt;ssh_config&lt;/a&gt; file ‘~/.ssh/config’.
This allows us to assign the appropriate keys to be used when trying to access specific services/addresses.
This is part of the security method known as “security by obscurity”, you reduce the amount of parameters an attacker can access
by making things more complicated. If someone managers to get ahold of one of your keys, they won’t have access to every single web service you use.&lt;/p&gt;

&lt;p&gt;An example of how of how you can specify ssh to connect to specific services:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host github.com
  user sample_user
  HostName github.com
  IdentityFile ~/.ssh/github_rsa
  IdentitiesOnly &lt;span class=&quot;nb&quot;&gt;yes

&lt;/span&gt;Host digitalocean.com
  HostName digitalocean.com
  IdentityFile ~/.ssh/digitalocean_key
  IdentitiesOnly &lt;span class=&quot;nb&quot;&gt;yes

&lt;/span&gt;And the list goes on...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another step in order to make things a bit more complicated is to add a password to your SSH-keys.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;sample_password&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.ssh/sample_id &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sample_user@gmail.com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You probably know by now, that by adding a password to your keys can be a pain in the butt.
Because every time you connect to a service or do a push request, etc. it’ll ask you for that crazy password you used &lt;code class=&quot;highlighter-rouge&quot;&gt;XL7pa5wnV/nQgUqi5mf7oQ6uG0hk5NwGh+5OYU+Mu6&lt;/code&gt;. Well you can solve this by using a service such as &lt;a href=&quot;http://www.funtoo.org/Keychain&quot;&gt;keychain&lt;/a&gt; and/or using your ssh-agent with the &lt;a href=&quot;https://linux.die.net/man/1/ssh-add&quot;&gt;ssh-add&lt;/a&gt; command.
If configured properly, they require to only input the password once person login session.
So in other words, you won’t have to re-input your crazy password until your next reboot.&lt;/p&gt;

&lt;h3 id=&quot;newer-key-types&quot;&gt;Newer Key types&lt;/h3&gt;
&lt;p&gt;Another very important thing to look as is your key encryption method if your still using id_dsa and/or id_rsa, please update to using &lt;a href=&quot;https://ed25519.cr.yp.to/&quot;&gt;Ed25519&lt;/a&gt; immediately. I admit, some services like GitHub and DigitalOcean may have issues when with this encryption type, but if your connecting to ssh I’d highly suggest it.
I’m no Cryptologist and I can’t tell you how and why a shorter key is more secure, other than it uses Elliptic curve cryptography methods.
But at the moment ED25519 is the recommended standard and as we know the higher the bit length and more rounds we encrypt the key, the more secure it’ll be.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 100 &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 4096 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; ed25519 &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.ssh/dev_key &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;sample_password123&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;sample_user&apos;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ~/.ssh/dev_key&lt;/span&gt;
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBCz0L+cnm3RSHawNK/h7hkCs7ZQIeeAyjKs4S+tHnPF sample_user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;duel-method-authentication&quot;&gt;Duel Method Authentication&lt;/h3&gt;
&lt;p&gt;Another enhancement you may wish to add to your SSH connections is requiring two forms of authentication.
This a technique in which you can also require a two methods of encryption in order to connect to the server (publickey and password).
In other words if a hacker “somehow” manages to get ahold of your publickey or your password, you’re server won’t be completely vulnerable to be victimized. Now let me warn you, this may cause issues with Capistrano, Ansible, Vagrant, or various other services.
Because the majority of them attempt to authenticate with the server by password or by publickey and not both.
But if that’s not that case and you’re really wanting to secure your SSH connections, this can be achieved with ease.
This is because we’ll be using &lt;a href=&quot;https://www.kernel.org/pub/linux/libs/pam/whatispam.html&quot;&gt;PAM&lt;/a&gt; which should be fairly straight forward because most modern Linux installations have various PAM modules installed by default. This can be achieved by changing your AuthenticationMethods used in /etc/ssh/sshd_config to something similar to the following:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;AuthenticationMethods&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publickey&lt;/span&gt;,&lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;interactive&lt;/span&gt;:&lt;span class=&quot;n&quot;&gt;pam&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In other words, in order to connect the the specified server you will be required
to supply the proper publickey as well a valid password.
It also helps to enforce higher levels of encryption, using modern cyphers, and locking down specific users and/or groups.
If you’re looking to properly secure your SSH server, I suggest you begin is by taking a very thorough look at Mozilla’s &lt;a href=&quot;https://wiki.mozilla.org/Security/Guidelines/OpenSSH&quot;&gt;OpenSSH Guidelines&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;important&quot;&gt;Important&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Please note&lt;/em&gt;&lt;/strong&gt; that the methods suggested for securing your SSH in this post
are not the only methods required in order to properly secure your SSH server.
They mostly consist of method to enhance existing security methods for your SSH connections.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.mozilla.org/Security/Guidelines/OpenSSH&quot;&gt;Mozilla SSH Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Brandon</name></author><category term="security" /><category term="shell" /><category term="ssh" /><category term="terminal" /></entry><entry><title type="html">Installing Fish on OSx</title><link href="https://theworkaround.com/2016/10/11/installing-fish-on-osx/" rel="alternate" type="text/html" title="Installing Fish on OSx" /><published>2016-10-11T00:00:00+00:00</published><updated>2016-10-11T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2016-10-11-installing-fish-on-osx.md</id><content type="html" xml:base="https://theworkaround.com/2016/10/11/installing-fish-on-osx/">&lt;p&gt;As developers we all use the command line, to make things happen.
And by now you know there’s several shell environments ranging from &lt;a href=&quot;http://www.zsh.org/&quot;&gt;zsh&lt;/a&gt;,
&lt;a href=&quot;http://www.kornshell.com/&quot;&gt;kornshell&lt;/a&gt;, &lt;a href=&quot;http://www.grymoire.com/Unix/Csh.html&quot;&gt;C-Shell&lt;/a&gt;,
&lt;a href=&quot;https://www.gnu.org/software/bash/&quot;&gt;bash&lt;/a&gt; and to who knows what variants of there out there.
Some of these shells are complicated beasts and some of them include a scripting language of their own.
But they all have a purpose and they have their dedicated users.
I for one can say for the past several years I’ve been a heavy user of zsh along with the addition of
&lt;a href=&quot;http://ohmyz.sh/&quot;&gt;oh-my-zsh&lt;/a&gt; for the customization, easy plugins, and user friendly terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/laughedelic/fish_logo&quot;&gt;&lt;img src=&quot;/images/posts/installing_fish_on_OSx/fish_logo.png&quot; alt=&quot;Fish Logo&quot; class=&quot;img-fluid mx-auto&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From what I could find the majority of POSIX developers tend to stick with BASH
which is very universal, widely used, and easy to learn. And mac OS users,
tend to stick with either bash or zsh, I mean why change what’s not broken, right?
Well it never hurts to try something new, I don’t mean the newest shiniest toy that’s available.
And who know’s it could always make a huge difference in your productivity.
Well after hearing quite a bit of hype from various developers
about the &lt;a href=&quot;https://fishshell.com/&quot;&gt;fish&lt;/a&gt; shell I decided to give it a try.
And thus far, I’m loving it. It’s very smooth, has a quick response time, seems less bogged down like
various other shells. It also has an amazing auto-complete/command prediction behavior that
makes things quite a bit easier and faster for the user.&lt;/p&gt;

&lt;p&gt;In this article, I am going to show you how I documented installing the fish terminal,
numerous of it’s extensions, and themes.&lt;/p&gt;

&lt;h1 id=&quot;installing-fish-on-osx&quot;&gt;Installing Fish on OSx&lt;/h1&gt;
&lt;p&gt;First of all if your a mac OS developer and looking to install custom software,
you more than likely already have &lt;a href=&quot;http://brew.sh/&quot;&gt;homebrew&lt;/a&gt;. Brew makes installing
programs through the command-line a heck of a lot easier than building with a makefile,
or having to bundle dependencies and packages. And than having the compilation fail on you.&lt;/p&gt;

&lt;p&gt;To install fish it’s quite simple, just begin by issuing the following commands:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update
brew install fish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you’re not quite ready to go, you need to add Fish to your systems shell listing
in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/shells&lt;/code&gt;, this does require administrative access.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/usr/local/bin/fish&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/shells
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that fish is installed, in order to use it lets begin by setting it as your default terminal shell environment.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /usr/local/bin/fish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now in order to load fish as your shell you’ll need to either open a new window, tab, session, etc.
It may look like the same old terminal that your used to, but it’s not.
If you would like to see some of the features fish offers, I’d suggest checking out their &lt;a href=&quot;https://fishshell.com/docs/current/tutorial.html&quot;&gt;tutorials&lt;/a&gt; page. Now for some reason
when I first installed fish it didn’t update/load the autocompletions, if this is the case for you
issue the following command &lt;code class=&quot;highlighter-rouge&quot;&gt;fish_update_completions&lt;/code&gt;, it’ll take a moment because there’s quite a few to download.
If your looking for a rough idea of what they have autocompletions consist of, I’d suggest checking out their list of &lt;a href=&quot;https://github.com/fish-shell/fish-shell/tree/master/share/completions&quot;&gt;autocompletion&lt;/a&gt; files.&lt;/p&gt;

&lt;h3 id=&quot;lets-talk-plugins&quot;&gt;Lets talk plugins&lt;/h3&gt;
&lt;p&gt;Part of using fish it make life easier on you, to get things done faster and more efficient.
That’s why no matter what we do, we’re always looking for plugins, shortcuts, and extensions.
Just like using brew, well install a fish plugin manager in order to make installing plugins as smooth as possible.
At the moment there’s a variety of fish plugin in manager including:
&lt;a href=&quot;http://fisherman.sh/&quot;&gt;fisherman&lt;/a&gt;, &lt;a href=&quot;https://github.com/tuvistavie/fundle&quot;&gt;fundle&lt;/a&gt;, &lt;a href=&quot;http://oh-my.fish/&quot;&gt;oh-my-fish&lt;/a&gt;
and a few others. In my opinion the more mature one seems to be fisherman,
which is what quite a few fish users seem to prefer using. On the other hand,
I chose oh-my-fish because of it’s ease of use and simple commands.
I mean as developers we’ve learned 100’s of linux commands, functions, methods,
attributes, etc. who wants to complicate our lives and add even more to memorize.
So lets install oh-my-fish to get the customization started.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; http://get.oh-my.fish | fish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if would like to get a rough idea of the oh-my-fish commands available, lets just issue the &lt;code class=&quot;highlighter-rouge&quot;&gt;omf&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; omf

Usage:
  omf &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;name&amp;gt;|&amp;lt;url&amp;gt;]
  omf theme &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;name&amp;gt;]
  omf remove &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;name&amp;gt;]
  omf search &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;name&amp;gt;]
  omf update
  omf &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;]&lt;/span&gt;

Commands:
  list      List &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;packages.
  describe  Get information about what packages &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;install   &lt;/span&gt;Install one or more packages.
  theme     List / Use themes.
  remove    Remove a theme or package.
  update    Update Oh My Fish.
  &lt;span class=&quot;nb&quot;&gt;cd        &lt;/span&gt;Change directory to plugin/theme directory.
  new       Create a new package from a template.
  search    Search &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a package or theme.
  submit    Submit a package to the registry.
  destroy   Uninstall Oh My Fish.
  doctor    Troubleshoot Oh My Fish.
  &lt;span class=&quot;nb&quot;&gt;help      &lt;/span&gt;Shows &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;about a specific action.

Options:
  &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;     Display this help.
  &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;  Display version.

For more information visit → git.io/oh-my-fish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By now you’ve probably installed several programs that generate several .dotfile folder
directories in your &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt; directory. Fish/oh-my-fish is no different, except instead of
piling up even more in your &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt; directory, fish config files will be stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/fish&lt;/code&gt;.
The .config path is used by several programs in order to reduce clutter being built up in your $HOME directory.
Because I’m sure if you entered in ‘ls -alH’ in the prompt you get something similar to the following.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.oh-my-zsh
.rbenv
.rvm
.vim
.tux
.ssh
.npm
.irbrc
&lt;span class=&quot;c&quot;&gt;# And tons of others as well&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let it be a new install or not, I always suggest updating your package managers
to have the newest database and latest packages available.Lets issue the
&lt;code class=&quot;highlighter-rouge&quot;&gt;omf update&lt;/code&gt; command and continue on. By now, you’ve probably noticed that OMF will
generate an entire set of config files of its own. I believe it’s best practice
to use the OMF config files for your aliases, functions, etc. But I stuck with using the
basic fish configure directory/files. I guarentee you will have to set several of your $PATH
directories to access your programs. If you wish to see those in which are
currently set use printf &lt;code class=&quot;highlighter-rouge&quot;&gt;printf &quot;%s\n&quot; $PATH&lt;/code&gt; to print out what you have access to executing.&lt;/p&gt;

&lt;p&gt;Now lets begin installing plugins&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# fish supports atom out of the box, but I also use SublimeText as well&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# this enables the sublime command &apos;subl&apos;, if it can be found&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;sublime

&lt;span class=&quot;c&quot;&gt;# To enable quick access to your rbenv without doing anything extra&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rbenv

&lt;span class=&quot;c&quot;&gt;# https://github.com/oh-my-fish/plugin-osx&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# enables OSx based commands: flushdns, showhidden, trash, updatedb, etc.&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;osx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You may or may not want to install grc, it is used for highlighting output command for specified commands.
But I believe it comes in handy for various commands and makes reading output easier.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;grc
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;grc
&lt;span class=&quot;c&quot;&gt;# this should automatically load grc to highlight fields rather than having to issue the following command&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /usr/local/etc/grc.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you install it, you can verify it’s working properly by issuing a command with assorted output, ie: &lt;code class=&quot;highlighter-rouge&quot;&gt;ps au&lt;/code&gt;.
You should get a colorized version of something similar to the below table.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;USER       PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND
Tarellel 17590   5.2  0.0  2446204   4976 s005  S+   12:16AM   0:00.04 /usr/bin/python /usr/local/bin/grc &lt;span class=&quot;nt&quot;&gt;-es&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--colour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto ps au
Tarellel 14325   1.5  0.0  2500316   5860 s005  S    11:13PM   0:00.73 &lt;span class=&quot;nt&quot;&gt;-fish&lt;/span&gt;
root     17591   0.0  0.0  2444720   1172 s005  R+   12:16AM   0:00.00 ps au
Tarellel 15150   0.0  0.0  2492120   5428 s002  S+   11:36PM   0:00.40 &lt;span class=&quot;nt&quot;&gt;-fish&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now back to installing some essential plugins:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# similar to zsh term, allows u to open new tab with current directory&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tab

&lt;span class=&quot;c&quot;&gt;# Add all brew paths to fish $PATH&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;brew

&lt;span class=&quot;c&quot;&gt;# used to help enfore 256 color terminal support&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://github.com/oh-my-fish/plugin-ssh&lt;/span&gt;
omf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ssh

&lt;span class=&quot;c&quot;&gt;# used to make ssh term colors consistent&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://github.com/oh-my-fish/plugin-ssh&lt;/span&gt;
omg &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ssh-term-helper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if you’re like me, I had several aliases, custom functions, variables and config in my zsh settings.
Fish’s function and alias declarations are slightly different than zsh and bash but not to hard to understand.
And now would be the perfect time to begin adding them before attempt to do a heck of a lot more.
A basic example of variable declarations below, is assigning the $EDITOR variable to use atom.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -U makes it a univerasal variable&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; EDITOR atom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lets-make-it-beautiful&quot;&gt;Lets make it beautiful&lt;/h3&gt;
&lt;p&gt;Now you may thing it’s hipster as hell to want custom colors, fonts, and outputs in your terminal.
But you want whats comfortable for you, whats easy on the eyes, and is easy to read.&lt;/p&gt;

&lt;p&gt;For all I know you may like the default colors and theme that you have setup for your terminal.
But you want to spruce it up, I suggest taking a look at the oh-my-zsh &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md&quot;&gt;theme&lt;/a&gt; page,
several of them are very similar to their oh-my-zsh counterparts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Powerline&lt;/strong&gt; - As you browse through the themes you’ll notice several of the themes require powerline installed in order to fully function.
This is a python package and python comes installed by default on most *nix and POSIX operating systems.
Depending on your operating system and setup you may want to look at the powerline &lt;a href=&quot;https://powerline.readthedocs.io/en/latest/installation/osx.html&quot;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install --user powerline-status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now powerline uses HD fonts with special characters for its stylized output, so you’ll need to
install various powerline fonts and symbols.&lt;/p&gt;

&lt;p&gt;Downloads/Install powerline &lt;a href=&quot;https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf&quot;&gt;symbols&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can either install it through the Font-Book app or by moving it to &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Fonts/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next lets install all the available powerline fonts, each one looks amazing and adds a whole new experience to your terminal.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/powerline/fonts.git
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./fonts/install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if you’re using one of those themes that does require powerline and a powerline font.
You’ll need to set your terminal applications font to use the powerline fonts.
In order to do this in iTerm2 goto the following menus &lt;code class=&quot;highlighter-rouge&quot;&gt;iterm &amp;gt; prefernces &amp;gt; profiles &amp;gt; text&lt;/code&gt;
and make sure the fonts used are ones with a powerline tag on in.
Plain old &lt;code class=&quot;highlighter-rouge&quot;&gt;Courier&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Monaco&lt;/code&gt; font just won’t cut it.&lt;/p&gt;

&lt;h3 id=&quot;my-setup&quot;&gt;My setup&lt;/h3&gt;
&lt;p&gt;oh-my-fish theme: &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md#bobthefish&quot;&gt;bobthefish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iTerm theme colors: &lt;a href=&quot;https://github.com/chriskempson/base16-iterm2&quot;&gt;base16-ocean-dark.256&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terminal fonts used&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Regular Font: &lt;code class=&quot;highlighter-rouge&quot;&gt;14pt Inconsolata for Powerline&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Non-ASCII font: &lt;code class=&quot;highlighter-rouge&quot;&gt;12pt Sauce Code Powerline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see below, I tend to enjoy using smooth charcoal gray themes, with colors that aren’t to vibrant.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/installing_fish_on_OSx/smooth_fish_terminal.png&quot; alt=&quot;iTerm with Multitabs&quot; class=&quot;img-fluid mx-auto&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;resources&quot;&gt;Resources;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fisherman/awesome-fish&quot;&gt;Awesome-fish&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ohmyz.sh/&quot;&gt;oh-my-fish&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;iTerm2 theme colors:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/chriskempson/base16-iterm2&quot;&gt;base16&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://draculatheme.com/iterm/&quot;&gt;dracula&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/romainl/flattened&quot;&gt;flattened&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized&quot;&gt;solarized-dark&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://color.smyck.org/&quot;&gt;smych&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/chriskempson/tomorrow-theme&quot;&gt;tomorrow theme&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://iterm2colorschemes.com/&quot;&gt;Iterm2-color-schemes&lt;/a&gt; (big list of colors)&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/MartinSeeler/iterm2-material-design&quot;&gt;iterm2-material-design&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmetsulek/flat-terminal&quot;&gt;flat-terminal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/raphamorim/lucario&quot;&gt;lucario&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://terminal.sexy/&quot;&gt;terminal.sexy&lt;/a&gt; : terminal color schemer&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Brandon</name></author><category term="fish" /><category term="osx" /><category term="shell" /><category term="terminal" /></entry><entry><title type="html">Setting up tmux with Rails</title><link href="https://theworkaround.com/2016/08/29/setting-up-tmux-with-rails/" rel="alternate" type="text/html" title="Setting up tmux with Rails" /><published>2016-08-29T00:00:00+00:00</published><updated>2016-08-29T00:00:00+00:00</updated><id>repo://posts.collection/_posts/2016-08-29-setting-up-tmux-with-rails.md</id><content type="html" xml:base="https://theworkaround.com/2016/08/29/setting-up-tmux-with-rails/">&lt;h2 id=&quot;why-use-tmux&quot;&gt;Why use tmux?&lt;/h2&gt;

&lt;p&gt;You may have a similar workflow the way I do. When I’m working on a rails
project I tend to have several tabs and/or windows open in the terminal. After a
while it tends  to be a heaping mess and I end up having to close the terminal
down and start all over again. And other times, I have just became tired of
having to switch between different tabs and windows, trying to find the one that I need.&lt;/p&gt;

&lt;p&gt;As you can see from the image below, this method works.
But having to switch from tab to tab, just to view your output logs or guard
builds/tests gets to be a pain after a while.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tmux_wRails/multitabs.png&quot; alt=&quot;iTerm with Multitabs&quot; class=&quot;img-fluid mx-auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So what is tmux? It’s a mutliplex and very similar to the *nix screen process.
It allows you to perform several processes all within the same screen, without
having to switch tabs or windows. And there are tons more applications you can
do with than building a rails application, but at the moment it’s a great
example of why it makes such a great tool.&lt;/p&gt;

&lt;p&gt;I can tell you this much, so far I’ve only used tmux for a short period of time
but it has become an essential tool in my development workflow. Tmux’s window and
session management makes it very easy to get started and increase my productivity.&lt;/p&gt;

&lt;h3 id=&quot;setting-up-tmux&quot;&gt;Setting up tmux&lt;/h3&gt;

&lt;p&gt;I’m just going to assume you’re on OSx, with homebrew installed. If you are
using Debian, Ubuntu, or some other distro it’s pretty close the same commands.
You’ll just be using different package manager commands.
Instead of using &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;, you will be making the installs with
&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;pacman&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Lets begin by install tmux&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tmux

&lt;span class=&quot;c&quot;&gt;# allows you to access OSx clipboard (pbcopy &amp;amp; pbpaste) through tmux&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;reattach-to-user-namespace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now if this is your first time installing tmux we’ll need to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;.tmux.conf&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# this will contain colors, settings, key-bindings, etc.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; ~/.tmux.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets install the tux Plugin Manager (yes I know another one).&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# make a .tmux directory to store everything&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/.tmux/plugins

&lt;span class=&quot;c&quot;&gt;# While we&apos;re at it, lets install tmux package manager&lt;/span&gt;
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The tmux plugin manager, makes it easy to install, update, and remove any and
all plugins you may wish to use.&lt;/p&gt;

&lt;p&gt;Lets begin by adding our first plugin to tmux, tmux-sensible.
You you dive in, it won’t seem like much but it contains various handy default
values, bindings, etc. that will make tmux easier to use. The best part of this
plugin, is that it’s not supposed to overwrite any config values you may have in
you &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt; file. No add the following to very bottom of your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; -&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; @&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;tmux-plugins/tmux-sensible&apos;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# recommened tmux defaults
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; -&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; @&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;tmux-plugins/tmux-yank&apos;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# allows copying to system vie tmux
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;~/.tmux/plugins/tpm/tpm&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now is where it gets tricky, with tmux you have a prefix-key combo that you have
 to use in order issue particular commands. By default the prefix keys are &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+b&lt;/code&gt;.
  With some commands/key-combos it makes a difference between &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now lets fire up, tmux first the first time. At first it won’t be anything we
haven’t seen before. But once you learn the keys and get the right plugins,
it’ll be a whole new experience.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# fire up tmux by issuing the following command&lt;/span&gt;
tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll terminal will flicker for a second and you have a very generic/ASCII
based status bar appear at the bottom. This means you’re doing great. Now lets
install the tmux plugins by doing the following key combo &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+b I&lt;/code&gt;. You may
have to wait a few minutes, but it’ll install all specified plugins in the
bottom of the tmux.conf file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tmux_wRails/basic_tmux.png&quot; alt=&quot;Basic tmux&quot; class=&quot;img-fluid center-block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now if you want to play around with tmux, to get additional windows, panes,
sessions, etc. Great. As you can see from the image, tmux is a multiplexer which
means it allows you to have several processes all running within a single terminal screen/tab.&lt;/p&gt;

&lt;h3 id=&quot;setup-and-install-tmuxinator&quot;&gt;Setup and Install Tmuxinator&lt;/h3&gt;

&lt;p&gt;Now I’m going to assume you have some version of ruby installed already
(various *nix OS’s are coming with it preinstalled). So up next, we will will
install &lt;a href=&quot;https://github.com/tmuxinator/tmuxinator&quot;&gt;tmuxinator&lt;/a&gt;, this is ruby gem
that makes it a heck of a lot easier to make preconfigured panes and windows
with default commands that run when they’re created.&lt;/p&gt;

&lt;p&gt;We first need to install tmuxinator and verifiy all the required requirements
are met in order to use it.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# install tmuxinator&lt;/span&gt;
gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tmuxinator

&lt;span class=&quot;c&quot;&gt;# verify everything is ready&lt;/span&gt;
tmuxinator doctor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will now need to add tmuxinator to your shell, for consistency sake I’ll
just assume your using zsh/oh-my-zsh.
You will need to add &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.bin/tmuxinator.zsh&lt;/code&gt; to your .zshrc file.&lt;/p&gt;

&lt;p&gt;Now you’ll be thinking, but no file by the name &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bin/tmuxinator.zsh&lt;/code&gt; even
exists. What gives? Well lets download the required completion file and get started.
And if you’re not using zsh, there’s files for bash and fish as well.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Download zsh completion file&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.zsh
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/.bin
&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;tmuxinator.zsh ~/.bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now in order to make sure everything is loaded and configured, reload the current terminal.&lt;/p&gt;

&lt;h3 id=&quot;lets-create-a-tmuxinator-project&quot;&gt;Lets create a tmuxinator project&lt;/h3&gt;
&lt;p&gt;Tmuxinator projects let us setup a predefined layout, with panes performing specific tasks.
Rather than mess around and build a layout every time we want to open up tmux.&lt;/p&gt;

&lt;p&gt;To create a tmuxinator project, lets issue the following command:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmuxinator new &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;project_name]

&lt;span class=&quot;c&quot;&gt;# for example&lt;/span&gt;
tmuxinator new red_willow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will generate a project.yml file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmuxinator&lt;/code&gt; folder.
It should also open up your specified $EDITOR allowing you to get a rough idea
on what tmuxinator’s configuration looks. It’s very basic theres panes, windows,
even layouts, the &lt;code class=&quot;highlighter-rouge&quot;&gt;root: ~/[project_name]&lt;/code&gt; at the top is the folder you specify
for tmuxinator to open up all the tmux terminals to.&lt;/p&gt;

&lt;p&gt;Below is an example of a pretty basic rails based tmux session, built with tmuxinator.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# ~/.tmuxinator/tasky.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tasky&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;~/Desktop/red_willow&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# http://stackoverflow.com/questions/9812000/specify-pane-percentage-in-tmuxinator-project&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# use: tmux list-windows to get coords and window sizes&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;b147,208x73,0,0[208x62,0,0,208x10,0,63{104x10,0,63,103x10,105,63}]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;panes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rails server thin&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;guard&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;atom .&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sleep 7 &amp;amp;&amp;amp; rails -t&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rails c&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# - foreman start&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tail -f log/development.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now issue the following command to initiate the tmux session &lt;code class=&quot;highlighter-rouge&quot;&gt;tmuxinator [project_name]&lt;/code&gt;
From here it may take a few seconds for everything to load up and start running.
You should now have terminal session similar to the image below.
Your sessions colors, panes, and windows may be a bit different from what it looks like.
That’s because you will need to setup your tmux config
and trust me figuring out all the settings to use can be a major beast to deal with.
So to make things a little easier and somewhere to start from, here’s a copy of my current &lt;a href=&quot;https://raw.githubusercontent.com/tarellel/dotfiles/master/rc/tmux.conf&quot;&gt;tmux.conf&lt;/a&gt;.
And if your lazy, you can always search &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt; for .dotfile repositories
because there are tons and tons of tmux.conf files listed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tmux_wRails/tmuxinator_wRails.png&quot; alt=&quot;tmuxinator with Rails&quot; class=&quot;img-fluid center-block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;How it’s time to let you loose on your own and see what kind of project configure best suites your needs.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tmux-commandsshortcuts&quot;&gt;tmux commands/shortcuts&lt;/h3&gt;

&lt;p&gt;Your prefix key can be configured in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt;, but I’ve chose to leave it
as &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+b&lt;/code&gt;, because it means there’s no way I will accidentally close or move
between a window, pane, session, etc. And this is just a small batch of commands
you can do, tmux is a massive program with tons of features I haven’t even begin to think about.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#All of these require you to first initiate the prefix key combo:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Default Prefix: CTRL+B and than whatever you want it to do&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot; - Horizontal split
% - Vertical split
&amp;lt;arrow buttom&amp;gt; - moves between session panes
z - loads window focus to current tmux panel
c - load up new tmux window
&amp;lt;window number&amp;gt; - switches between specified window
d - detach current tmux session
x - kill current pane in focus
[space] - toggle between layouts
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here a few essential tmux console commands:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# to view list of current tmux sessions&lt;/span&gt;
tmux &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# to reattach tmux panels (number specified will be specified tmux session from tmux ls)&lt;/span&gt;
tmux attach &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 0

&lt;span class=&quot;c&quot;&gt;#To kill specific tmux session&lt;/span&gt;
tmux kill-session &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 0

&lt;span class=&quot;c&quot;&gt;# kills the last tmux session on the list&lt;/span&gt;
tmux kill-session

&lt;span class=&quot;c&quot;&gt;# to completely kill tmux&lt;/span&gt;
tmux kill-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://hyperpolyglot.org/multiplexers&quot;&gt;Terminal Multiplexers commands and shortcuts&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://tmuxcheatsheet.com/&quot;&gt;tmux cheatsheet&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;tmux &amp;amp; screen cheat-sheet&quot;&gt;tmux and screen cheatsheet&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://manpages.ubuntu.com/manpages/precise/en/man1/tmux.1.html&quot;&gt;tmux man page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://robots.thoughtbot.com/a-tmux-crash-course&quot;&gt;A tmux crash course&lt;/a&gt; : thoughtbot&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/tmux-a-simple-start/&quot;&gt;Tmux: A Simple Start&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/&quot;&gt;Making tmux Pretty and Usable&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/tmuxinator/tmuxinator&quot;&gt;tmuxinator&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Brandon</name></author><category term="development" /><category term="programming" /><category term="terminal" /><category term="tmux" /></entry></feed>